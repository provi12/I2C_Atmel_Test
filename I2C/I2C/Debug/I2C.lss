
I2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e4c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003a  00800060  00000e4c  00000ec0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000efa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f58  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000f94  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001948  00000000  00000000  00001084  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000076f  00000000  00000000  000029cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000cf6  00000000  00000000  0000313b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000238  00000000  00000000  00003e34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006c4  00000000  00000000  0000406c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000146f  00000000  00000000  00004730  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  00005b9f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e4       	ldi	r30, 0x4C	; 76
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 39       	cpi	r26, 0x9A	; 154
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 91 03 	call	0x722	; 0x722 <main>
  7a:	0c 94 24 07 	jmp	0xe48	; 0xe48 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_Z9pinChangeii>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  82:	67 2b       	or	r22, r23
  84:	09 f0       	breq	.+2      	; 0x88 <_Z9pinChangeii+0x6>
  86:	df c0       	rjmp	.+446    	; 0x246 <__EEPROM_REGION_LENGTH__+0x46>
  88:	00 97       	sbiw	r24, 0x00	; 0
  8a:	21 f4       	brne	.+8      	; 0x94 <_Z9pinChangeii+0x12>
  8c:	8b b3       	in	r24, 0x1b	; 27
  8e:	8e 7f       	andi	r24, 0xFE	; 254
  90:	8b bb       	out	0x1b, r24	; 27
  92:	08 95       	ret
  94:	81 30       	cpi	r24, 0x01	; 1
  96:	91 05       	cpc	r25, r1
  98:	21 f4       	brne	.+8      	; 0xa2 <_Z9pinChangeii+0x20>
  9a:	8b b3       	in	r24, 0x1b	; 27
  9c:	8d 7f       	andi	r24, 0xFD	; 253
  9e:	8b bb       	out	0x1b, r24	; 27
  a0:	08 95       	ret
  a2:	82 30       	cpi	r24, 0x02	; 2
  a4:	91 05       	cpc	r25, r1
  a6:	21 f4       	brne	.+8      	; 0xb0 <_Z9pinChangeii+0x2e>
  a8:	8b b3       	in	r24, 0x1b	; 27
  aa:	8b 7f       	andi	r24, 0xFB	; 251
  ac:	8b bb       	out	0x1b, r24	; 27
  ae:	08 95       	ret
  b0:	83 30       	cpi	r24, 0x03	; 3
  b2:	91 05       	cpc	r25, r1
  b4:	21 f4       	brne	.+8      	; 0xbe <_Z9pinChangeii+0x3c>
  b6:	8b b3       	in	r24, 0x1b	; 27
  b8:	87 7f       	andi	r24, 0xF7	; 247
  ba:	8b bb       	out	0x1b, r24	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	21 f4       	brne	.+8      	; 0xcc <_Z9pinChangeii+0x4a>
  c4:	8b b3       	in	r24, 0x1b	; 27
  c6:	8f 7e       	andi	r24, 0xEF	; 239
  c8:	8b bb       	out	0x1b, r24	; 27
  ca:	08 95       	ret
  cc:	85 30       	cpi	r24, 0x05	; 5
  ce:	91 05       	cpc	r25, r1
  d0:	21 f4       	brne	.+8      	; 0xda <_Z9pinChangeii+0x58>
  d2:	8b b3       	in	r24, 0x1b	; 27
  d4:	8f 7d       	andi	r24, 0xDF	; 223
  d6:	8b bb       	out	0x1b, r24	; 27
  d8:	08 95       	ret
  da:	86 30       	cpi	r24, 0x06	; 6
  dc:	91 05       	cpc	r25, r1
  de:	21 f4       	brne	.+8      	; 0xe8 <_Z9pinChangeii+0x66>
  e0:	8b b3       	in	r24, 0x1b	; 27
  e2:	8f 7b       	andi	r24, 0xBF	; 191
  e4:	8b bb       	out	0x1b, r24	; 27
  e6:	08 95       	ret
  e8:	87 30       	cpi	r24, 0x07	; 7
  ea:	91 05       	cpc	r25, r1
  ec:	21 f4       	brne	.+8      	; 0xf6 <_Z9pinChangeii+0x74>
  ee:	8b b3       	in	r24, 0x1b	; 27
  f0:	8f 77       	andi	r24, 0x7F	; 127
  f2:	8b bb       	out	0x1b, r24	; 27
  f4:	08 95       	ret
  f6:	8a 30       	cpi	r24, 0x0A	; 10
  f8:	91 05       	cpc	r25, r1
  fa:	21 f4       	brne	.+8      	; 0x104 <_Z9pinChangeii+0x82>
  fc:	88 b3       	in	r24, 0x18	; 24
  fe:	8e 7f       	andi	r24, 0xFE	; 254
 100:	88 bb       	out	0x18, r24	; 24
 102:	08 95       	ret
 104:	8b 30       	cpi	r24, 0x0B	; 11
 106:	91 05       	cpc	r25, r1
 108:	21 f4       	brne	.+8      	; 0x112 <_Z9pinChangeii+0x90>
 10a:	88 b3       	in	r24, 0x18	; 24
 10c:	8d 7f       	andi	r24, 0xFD	; 253
 10e:	88 bb       	out	0x18, r24	; 24
 110:	08 95       	ret
 112:	8c 30       	cpi	r24, 0x0C	; 12
 114:	91 05       	cpc	r25, r1
 116:	21 f4       	brne	.+8      	; 0x120 <_Z9pinChangeii+0x9e>
 118:	88 b3       	in	r24, 0x18	; 24
 11a:	8b 7f       	andi	r24, 0xFB	; 251
 11c:	88 bb       	out	0x18, r24	; 24
 11e:	08 95       	ret
 120:	8d 30       	cpi	r24, 0x0D	; 13
 122:	91 05       	cpc	r25, r1
 124:	21 f4       	brne	.+8      	; 0x12e <_Z9pinChangeii+0xac>
 126:	88 b3       	in	r24, 0x18	; 24
 128:	87 7f       	andi	r24, 0xF7	; 247
 12a:	88 bb       	out	0x18, r24	; 24
 12c:	08 95       	ret
 12e:	8e 30       	cpi	r24, 0x0E	; 14
 130:	91 05       	cpc	r25, r1
 132:	21 f4       	brne	.+8      	; 0x13c <_Z9pinChangeii+0xba>
 134:	88 b3       	in	r24, 0x18	; 24
 136:	8f 7e       	andi	r24, 0xEF	; 239
 138:	88 bb       	out	0x18, r24	; 24
 13a:	08 95       	ret
 13c:	8f 30       	cpi	r24, 0x0F	; 15
 13e:	91 05       	cpc	r25, r1
 140:	21 f4       	brne	.+8      	; 0x14a <_Z9pinChangeii+0xc8>
 142:	88 b3       	in	r24, 0x18	; 24
 144:	8f 7d       	andi	r24, 0xDF	; 223
 146:	88 bb       	out	0x18, r24	; 24
 148:	08 95       	ret
 14a:	80 31       	cpi	r24, 0x10	; 16
 14c:	91 05       	cpc	r25, r1
 14e:	21 f4       	brne	.+8      	; 0x158 <_Z9pinChangeii+0xd6>
 150:	88 b3       	in	r24, 0x18	; 24
 152:	8f 7b       	andi	r24, 0xBF	; 191
 154:	88 bb       	out	0x18, r24	; 24
 156:	08 95       	ret
 158:	81 31       	cpi	r24, 0x11	; 17
 15a:	91 05       	cpc	r25, r1
 15c:	21 f4       	brne	.+8      	; 0x166 <_Z9pinChangeii+0xe4>
 15e:	88 b3       	in	r24, 0x18	; 24
 160:	8f 77       	andi	r24, 0x7F	; 127
 162:	88 bb       	out	0x18, r24	; 24
 164:	08 95       	ret
 166:	84 31       	cpi	r24, 0x14	; 20
 168:	91 05       	cpc	r25, r1
 16a:	21 f4       	brne	.+8      	; 0x174 <_Z9pinChangeii+0xf2>
 16c:	85 b3       	in	r24, 0x15	; 21
 16e:	8e 7f       	andi	r24, 0xFE	; 254
 170:	85 bb       	out	0x15, r24	; 21
 172:	08 95       	ret
 174:	85 31       	cpi	r24, 0x15	; 21
 176:	91 05       	cpc	r25, r1
 178:	21 f4       	brne	.+8      	; 0x182 <_Z9pinChangeii+0x100>
 17a:	85 b3       	in	r24, 0x15	; 21
 17c:	8d 7f       	andi	r24, 0xFD	; 253
 17e:	85 bb       	out	0x15, r24	; 21
 180:	08 95       	ret
 182:	86 31       	cpi	r24, 0x16	; 22
 184:	91 05       	cpc	r25, r1
 186:	21 f4       	brne	.+8      	; 0x190 <_Z9pinChangeii+0x10e>
 188:	85 b3       	in	r24, 0x15	; 21
 18a:	8b 7f       	andi	r24, 0xFB	; 251
 18c:	85 bb       	out	0x15, r24	; 21
 18e:	08 95       	ret
 190:	87 31       	cpi	r24, 0x17	; 23
 192:	91 05       	cpc	r25, r1
 194:	21 f4       	brne	.+8      	; 0x19e <_Z9pinChangeii+0x11c>
 196:	85 b3       	in	r24, 0x15	; 21
 198:	87 7f       	andi	r24, 0xF7	; 247
 19a:	85 bb       	out	0x15, r24	; 21
 19c:	08 95       	ret
 19e:	88 31       	cpi	r24, 0x18	; 24
 1a0:	91 05       	cpc	r25, r1
 1a2:	21 f4       	brne	.+8      	; 0x1ac <_Z9pinChangeii+0x12a>
 1a4:	85 b3       	in	r24, 0x15	; 21
 1a6:	8f 7e       	andi	r24, 0xEF	; 239
 1a8:	85 bb       	out	0x15, r24	; 21
 1aa:	08 95       	ret
 1ac:	89 31       	cpi	r24, 0x19	; 25
 1ae:	91 05       	cpc	r25, r1
 1b0:	21 f4       	brne	.+8      	; 0x1ba <_Z9pinChangeii+0x138>
 1b2:	85 b3       	in	r24, 0x15	; 21
 1b4:	8f 7d       	andi	r24, 0xDF	; 223
 1b6:	85 bb       	out	0x15, r24	; 21
 1b8:	08 95       	ret
 1ba:	8a 31       	cpi	r24, 0x1A	; 26
 1bc:	91 05       	cpc	r25, r1
 1be:	21 f4       	brne	.+8      	; 0x1c8 <_Z9pinChangeii+0x146>
 1c0:	85 b3       	in	r24, 0x15	; 21
 1c2:	8f 7b       	andi	r24, 0xBF	; 191
 1c4:	85 bb       	out	0x15, r24	; 21
 1c6:	08 95       	ret
 1c8:	8b 31       	cpi	r24, 0x1B	; 27
 1ca:	91 05       	cpc	r25, r1
 1cc:	21 f4       	brne	.+8      	; 0x1d6 <_Z9pinChangeii+0x154>
 1ce:	85 b3       	in	r24, 0x15	; 21
 1d0:	8f 77       	andi	r24, 0x7F	; 127
 1d2:	85 bb       	out	0x15, r24	; 21
 1d4:	08 95       	ret
 1d6:	8e 31       	cpi	r24, 0x1E	; 30
 1d8:	91 05       	cpc	r25, r1
 1da:	21 f4       	brne	.+8      	; 0x1e4 <_Z9pinChangeii+0x162>
 1dc:	82 b3       	in	r24, 0x12	; 18
 1de:	8e 7f       	andi	r24, 0xFE	; 254
 1e0:	82 bb       	out	0x12, r24	; 18
 1e2:	08 95       	ret
 1e4:	8f 31       	cpi	r24, 0x1F	; 31
 1e6:	91 05       	cpc	r25, r1
 1e8:	21 f4       	brne	.+8      	; 0x1f2 <_Z9pinChangeii+0x170>
 1ea:	82 b3       	in	r24, 0x12	; 18
 1ec:	8d 7f       	andi	r24, 0xFD	; 253
 1ee:	82 bb       	out	0x12, r24	; 18
 1f0:	08 95       	ret
 1f2:	80 32       	cpi	r24, 0x20	; 32
 1f4:	91 05       	cpc	r25, r1
 1f6:	21 f4       	brne	.+8      	; 0x200 <__EEPROM_REGION_LENGTH__>
 1f8:	82 b3       	in	r24, 0x12	; 18
 1fa:	8b 7f       	andi	r24, 0xFB	; 251
 1fc:	82 bb       	out	0x12, r24	; 18
 1fe:	08 95       	ret
 200:	81 32       	cpi	r24, 0x21	; 33
 202:	91 05       	cpc	r25, r1
 204:	21 f4       	brne	.+8      	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
 206:	82 b3       	in	r24, 0x12	; 18
 208:	87 7f       	andi	r24, 0xF7	; 247
 20a:	82 bb       	out	0x12, r24	; 18
 20c:	08 95       	ret
 20e:	82 32       	cpi	r24, 0x22	; 34
 210:	91 05       	cpc	r25, r1
 212:	21 f4       	brne	.+8      	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
 214:	82 b3       	in	r24, 0x12	; 18
 216:	8f 7e       	andi	r24, 0xEF	; 239
 218:	82 bb       	out	0x12, r24	; 18
 21a:	08 95       	ret
 21c:	83 32       	cpi	r24, 0x23	; 35
 21e:	91 05       	cpc	r25, r1
 220:	21 f4       	brne	.+8      	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
 222:	82 b3       	in	r24, 0x12	; 18
 224:	8f 7d       	andi	r24, 0xDF	; 223
 226:	82 bb       	out	0x12, r24	; 18
 228:	08 95       	ret
 22a:	84 32       	cpi	r24, 0x24	; 36
 22c:	91 05       	cpc	r25, r1
 22e:	21 f4       	brne	.+8      	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
 230:	82 b3       	in	r24, 0x12	; 18
 232:	8f 7b       	andi	r24, 0xBF	; 191
 234:	82 bb       	out	0x12, r24	; 18
 236:	08 95       	ret
 238:	85 97       	sbiw	r24, 0x25	; 37
 23a:	09 f0       	breq	.+2      	; 0x23e <__EEPROM_REGION_LENGTH__+0x3e>
 23c:	e1 c0       	rjmp	.+450    	; 0x400 <__DATA_REGION_LENGTH__>
 23e:	82 b3       	in	r24, 0x12	; 18
 240:	8f 77       	andi	r24, 0x7F	; 127
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret
 246:	00 97       	sbiw	r24, 0x00	; 0
 248:	21 f4       	brne	.+8      	; 0x252 <__EEPROM_REGION_LENGTH__+0x52>
 24a:	8b b3       	in	r24, 0x1b	; 27
 24c:	81 60       	ori	r24, 0x01	; 1
 24e:	8b bb       	out	0x1b, r24	; 27
 250:	08 95       	ret
 252:	81 30       	cpi	r24, 0x01	; 1
 254:	91 05       	cpc	r25, r1
 256:	21 f4       	brne	.+8      	; 0x260 <__EEPROM_REGION_LENGTH__+0x60>
 258:	8b b3       	in	r24, 0x1b	; 27
 25a:	82 60       	ori	r24, 0x02	; 2
 25c:	8b bb       	out	0x1b, r24	; 27
 25e:	08 95       	ret
 260:	82 30       	cpi	r24, 0x02	; 2
 262:	91 05       	cpc	r25, r1
 264:	21 f4       	brne	.+8      	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
 266:	8b b3       	in	r24, 0x1b	; 27
 268:	84 60       	ori	r24, 0x04	; 4
 26a:	8b bb       	out	0x1b, r24	; 27
 26c:	08 95       	ret
 26e:	83 30       	cpi	r24, 0x03	; 3
 270:	91 05       	cpc	r25, r1
 272:	21 f4       	brne	.+8      	; 0x27c <__EEPROM_REGION_LENGTH__+0x7c>
 274:	8b b3       	in	r24, 0x1b	; 27
 276:	88 60       	ori	r24, 0x08	; 8
 278:	8b bb       	out	0x1b, r24	; 27
 27a:	08 95       	ret
 27c:	84 30       	cpi	r24, 0x04	; 4
 27e:	91 05       	cpc	r25, r1
 280:	21 f4       	brne	.+8      	; 0x28a <__EEPROM_REGION_LENGTH__+0x8a>
 282:	8b b3       	in	r24, 0x1b	; 27
 284:	80 61       	ori	r24, 0x10	; 16
 286:	8b bb       	out	0x1b, r24	; 27
 288:	08 95       	ret
 28a:	85 30       	cpi	r24, 0x05	; 5
 28c:	91 05       	cpc	r25, r1
 28e:	21 f4       	brne	.+8      	; 0x298 <__EEPROM_REGION_LENGTH__+0x98>
 290:	8b b3       	in	r24, 0x1b	; 27
 292:	80 62       	ori	r24, 0x20	; 32
 294:	8b bb       	out	0x1b, r24	; 27
 296:	08 95       	ret
 298:	86 30       	cpi	r24, 0x06	; 6
 29a:	91 05       	cpc	r25, r1
 29c:	21 f4       	brne	.+8      	; 0x2a6 <__EEPROM_REGION_LENGTH__+0xa6>
 29e:	8b b3       	in	r24, 0x1b	; 27
 2a0:	80 64       	ori	r24, 0x40	; 64
 2a2:	8b bb       	out	0x1b, r24	; 27
 2a4:	08 95       	ret
 2a6:	87 30       	cpi	r24, 0x07	; 7
 2a8:	91 05       	cpc	r25, r1
 2aa:	21 f4       	brne	.+8      	; 0x2b4 <__EEPROM_REGION_LENGTH__+0xb4>
 2ac:	8b b3       	in	r24, 0x1b	; 27
 2ae:	80 68       	ori	r24, 0x80	; 128
 2b0:	8b bb       	out	0x1b, r24	; 27
 2b2:	08 95       	ret
 2b4:	8a 30       	cpi	r24, 0x0A	; 10
 2b6:	91 05       	cpc	r25, r1
 2b8:	21 f4       	brne	.+8      	; 0x2c2 <__EEPROM_REGION_LENGTH__+0xc2>
 2ba:	88 b3       	in	r24, 0x18	; 24
 2bc:	81 60       	ori	r24, 0x01	; 1
 2be:	88 bb       	out	0x18, r24	; 24
 2c0:	08 95       	ret
 2c2:	8b 30       	cpi	r24, 0x0B	; 11
 2c4:	91 05       	cpc	r25, r1
 2c6:	21 f4       	brne	.+8      	; 0x2d0 <__EEPROM_REGION_LENGTH__+0xd0>
 2c8:	88 b3       	in	r24, 0x18	; 24
 2ca:	82 60       	ori	r24, 0x02	; 2
 2cc:	88 bb       	out	0x18, r24	; 24
 2ce:	08 95       	ret
 2d0:	8c 30       	cpi	r24, 0x0C	; 12
 2d2:	91 05       	cpc	r25, r1
 2d4:	21 f4       	brne	.+8      	; 0x2de <__EEPROM_REGION_LENGTH__+0xde>
 2d6:	88 b3       	in	r24, 0x18	; 24
 2d8:	84 60       	ori	r24, 0x04	; 4
 2da:	88 bb       	out	0x18, r24	; 24
 2dc:	08 95       	ret
 2de:	8d 30       	cpi	r24, 0x0D	; 13
 2e0:	91 05       	cpc	r25, r1
 2e2:	21 f4       	brne	.+8      	; 0x2ec <__EEPROM_REGION_LENGTH__+0xec>
 2e4:	88 b3       	in	r24, 0x18	; 24
 2e6:	88 60       	ori	r24, 0x08	; 8
 2e8:	88 bb       	out	0x18, r24	; 24
 2ea:	08 95       	ret
 2ec:	8e 30       	cpi	r24, 0x0E	; 14
 2ee:	91 05       	cpc	r25, r1
 2f0:	21 f4       	brne	.+8      	; 0x2fa <__EEPROM_REGION_LENGTH__+0xfa>
 2f2:	88 b3       	in	r24, 0x18	; 24
 2f4:	80 61       	ori	r24, 0x10	; 16
 2f6:	88 bb       	out	0x18, r24	; 24
 2f8:	08 95       	ret
 2fa:	8f 30       	cpi	r24, 0x0F	; 15
 2fc:	91 05       	cpc	r25, r1
 2fe:	21 f4       	brne	.+8      	; 0x308 <__EEPROM_REGION_LENGTH__+0x108>
 300:	88 b3       	in	r24, 0x18	; 24
 302:	80 62       	ori	r24, 0x20	; 32
 304:	88 bb       	out	0x18, r24	; 24
 306:	08 95       	ret
 308:	80 31       	cpi	r24, 0x10	; 16
 30a:	91 05       	cpc	r25, r1
 30c:	21 f4       	brne	.+8      	; 0x316 <__EEPROM_REGION_LENGTH__+0x116>
 30e:	88 b3       	in	r24, 0x18	; 24
 310:	80 64       	ori	r24, 0x40	; 64
 312:	88 bb       	out	0x18, r24	; 24
 314:	08 95       	ret
 316:	81 31       	cpi	r24, 0x11	; 17
 318:	91 05       	cpc	r25, r1
 31a:	21 f4       	brne	.+8      	; 0x324 <__EEPROM_REGION_LENGTH__+0x124>
 31c:	88 b3       	in	r24, 0x18	; 24
 31e:	80 68       	ori	r24, 0x80	; 128
 320:	88 bb       	out	0x18, r24	; 24
 322:	08 95       	ret
 324:	84 31       	cpi	r24, 0x14	; 20
 326:	91 05       	cpc	r25, r1
 328:	21 f4       	brne	.+8      	; 0x332 <__EEPROM_REGION_LENGTH__+0x132>
 32a:	85 b3       	in	r24, 0x15	; 21
 32c:	81 60       	ori	r24, 0x01	; 1
 32e:	85 bb       	out	0x15, r24	; 21
 330:	08 95       	ret
 332:	85 31       	cpi	r24, 0x15	; 21
 334:	91 05       	cpc	r25, r1
 336:	21 f4       	brne	.+8      	; 0x340 <__EEPROM_REGION_LENGTH__+0x140>
 338:	85 b3       	in	r24, 0x15	; 21
 33a:	82 60       	ori	r24, 0x02	; 2
 33c:	85 bb       	out	0x15, r24	; 21
 33e:	08 95       	ret
 340:	86 31       	cpi	r24, 0x16	; 22
 342:	91 05       	cpc	r25, r1
 344:	21 f4       	brne	.+8      	; 0x34e <__EEPROM_REGION_LENGTH__+0x14e>
 346:	85 b3       	in	r24, 0x15	; 21
 348:	84 60       	ori	r24, 0x04	; 4
 34a:	85 bb       	out	0x15, r24	; 21
 34c:	08 95       	ret
 34e:	87 31       	cpi	r24, 0x17	; 23
 350:	91 05       	cpc	r25, r1
 352:	21 f4       	brne	.+8      	; 0x35c <__EEPROM_REGION_LENGTH__+0x15c>
 354:	85 b3       	in	r24, 0x15	; 21
 356:	88 60       	ori	r24, 0x08	; 8
 358:	85 bb       	out	0x15, r24	; 21
 35a:	08 95       	ret
 35c:	88 31       	cpi	r24, 0x18	; 24
 35e:	91 05       	cpc	r25, r1
 360:	21 f4       	brne	.+8      	; 0x36a <__EEPROM_REGION_LENGTH__+0x16a>
 362:	85 b3       	in	r24, 0x15	; 21
 364:	80 61       	ori	r24, 0x10	; 16
 366:	85 bb       	out	0x15, r24	; 21
 368:	08 95       	ret
 36a:	89 31       	cpi	r24, 0x19	; 25
 36c:	91 05       	cpc	r25, r1
 36e:	21 f4       	brne	.+8      	; 0x378 <__EEPROM_REGION_LENGTH__+0x178>
 370:	85 b3       	in	r24, 0x15	; 21
 372:	80 62       	ori	r24, 0x20	; 32
 374:	85 bb       	out	0x15, r24	; 21
 376:	08 95       	ret
 378:	8a 31       	cpi	r24, 0x1A	; 26
 37a:	91 05       	cpc	r25, r1
 37c:	21 f4       	brne	.+8      	; 0x386 <__EEPROM_REGION_LENGTH__+0x186>
 37e:	85 b3       	in	r24, 0x15	; 21
 380:	80 64       	ori	r24, 0x40	; 64
 382:	85 bb       	out	0x15, r24	; 21
 384:	08 95       	ret
 386:	8b 31       	cpi	r24, 0x1B	; 27
 388:	91 05       	cpc	r25, r1
 38a:	21 f4       	brne	.+8      	; 0x394 <__EEPROM_REGION_LENGTH__+0x194>
 38c:	85 b3       	in	r24, 0x15	; 21
 38e:	80 68       	ori	r24, 0x80	; 128
 390:	85 bb       	out	0x15, r24	; 21
 392:	08 95       	ret
 394:	8e 31       	cpi	r24, 0x1E	; 30
 396:	91 05       	cpc	r25, r1
 398:	21 f4       	brne	.+8      	; 0x3a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 39a:	82 b3       	in	r24, 0x12	; 18
 39c:	81 60       	ori	r24, 0x01	; 1
 39e:	82 bb       	out	0x12, r24	; 18
 3a0:	08 95       	ret
 3a2:	8f 31       	cpi	r24, 0x1F	; 31
 3a4:	91 05       	cpc	r25, r1
 3a6:	21 f4       	brne	.+8      	; 0x3b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 3a8:	82 b3       	in	r24, 0x12	; 18
 3aa:	82 60       	ori	r24, 0x02	; 2
 3ac:	82 bb       	out	0x12, r24	; 18
 3ae:	08 95       	ret
 3b0:	80 32       	cpi	r24, 0x20	; 32
 3b2:	91 05       	cpc	r25, r1
 3b4:	21 f4       	brne	.+8      	; 0x3be <__EEPROM_REGION_LENGTH__+0x1be>
 3b6:	82 b3       	in	r24, 0x12	; 18
 3b8:	84 60       	ori	r24, 0x04	; 4
 3ba:	82 bb       	out	0x12, r24	; 18
 3bc:	08 95       	ret
 3be:	81 32       	cpi	r24, 0x21	; 33
 3c0:	91 05       	cpc	r25, r1
 3c2:	21 f4       	brne	.+8      	; 0x3cc <__EEPROM_REGION_LENGTH__+0x1cc>
 3c4:	82 b3       	in	r24, 0x12	; 18
 3c6:	88 60       	ori	r24, 0x08	; 8
 3c8:	82 bb       	out	0x12, r24	; 18
 3ca:	08 95       	ret
 3cc:	82 32       	cpi	r24, 0x22	; 34
 3ce:	91 05       	cpc	r25, r1
 3d0:	21 f4       	brne	.+8      	; 0x3da <__EEPROM_REGION_LENGTH__+0x1da>
 3d2:	82 b3       	in	r24, 0x12	; 18
 3d4:	80 61       	ori	r24, 0x10	; 16
 3d6:	82 bb       	out	0x12, r24	; 18
 3d8:	08 95       	ret
 3da:	83 32       	cpi	r24, 0x23	; 35
 3dc:	91 05       	cpc	r25, r1
 3de:	21 f4       	brne	.+8      	; 0x3e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 3e0:	82 b3       	in	r24, 0x12	; 18
 3e2:	80 62       	ori	r24, 0x20	; 32
 3e4:	82 bb       	out	0x12, r24	; 18
 3e6:	08 95       	ret
 3e8:	84 32       	cpi	r24, 0x24	; 36
 3ea:	91 05       	cpc	r25, r1
 3ec:	21 f4       	brne	.+8      	; 0x3f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 3ee:	82 b3       	in	r24, 0x12	; 18
 3f0:	80 64       	ori	r24, 0x40	; 64
 3f2:	82 bb       	out	0x12, r24	; 18
 3f4:	08 95       	ret
 3f6:	85 97       	sbiw	r24, 0x25	; 37
 3f8:	19 f4       	brne	.+6      	; 0x400 <__DATA_REGION_LENGTH__>
 3fa:	82 b3       	in	r24, 0x12	; 18
 3fc:	80 68       	ori	r24, 0x80	; 128
 3fe:	82 bb       	out	0x12, r24	; 18
 400:	08 95       	ret

00000402 <_Z9Lcd4_Portc>:
 402:	cf 93       	push	r28
 404:	c8 2f       	mov	r28, r24
 406:	80 ff       	sbrs	r24, 0
 408:	07 c0       	rjmp	.+14     	; 0x418 <_Z9Lcd4_Portc+0x16>
 40a:	61 e0       	ldi	r22, 0x01	; 1
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 416:	06 c0       	rjmp	.+12     	; 0x424 <_Z9Lcd4_Portc+0x22>
 418:	60 e0       	ldi	r22, 0x00	; 0
 41a:	70 e0       	ldi	r23, 0x00	; 0
 41c:	80 e0       	ldi	r24, 0x00	; 0
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 424:	c1 ff       	sbrs	r28, 1
 426:	07 c0       	rjmp	.+14     	; 0x436 <_Z9Lcd4_Portc+0x34>
 428:	61 e0       	ldi	r22, 0x01	; 1
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 434:	06 c0       	rjmp	.+12     	; 0x442 <_Z9Lcd4_Portc+0x40>
 436:	60 e0       	ldi	r22, 0x00	; 0
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 442:	c2 ff       	sbrs	r28, 2
 444:	07 c0       	rjmp	.+14     	; 0x454 <_Z9Lcd4_Portc+0x52>
 446:	61 e0       	ldi	r22, 0x01	; 1
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	82 e0       	ldi	r24, 0x02	; 2
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 452:	06 c0       	rjmp	.+12     	; 0x460 <__stack+0x1>
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	70 e0       	ldi	r23, 0x00	; 0
 458:	82 e0       	ldi	r24, 0x02	; 2
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 460:	c3 ff       	sbrs	r28, 3
 462:	07 c0       	rjmp	.+14     	; 0x472 <__stack+0x13>
 464:	61 e0       	ldi	r22, 0x01	; 1
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	83 e0       	ldi	r24, 0x03	; 3
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 470:	06 c0       	rjmp	.+12     	; 0x47e <__stack+0x1f>
 472:	60 e0       	ldi	r22, 0x00	; 0
 474:	70 e0       	ldi	r23, 0x00	; 0
 476:	83 e0       	ldi	r24, 0x03	; 3
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 47e:	cf 91       	pop	r28
 480:	08 95       	ret

00000482 <_Z8Lcd4_Cmdc>:
 482:	cf 93       	push	r28
 484:	c8 2f       	mov	r28, r24
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	70 e0       	ldi	r23, 0x00	; 0
 48a:	86 e0       	ldi	r24, 0x06	; 6
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 492:	8c 2f       	mov	r24, r28
 494:	0e 94 01 02 	call	0x402	; 0x402 <_Z9Lcd4_Portc>
 498:	61 e0       	ldi	r22, 0x01	; 1
 49a:	70 e0       	ldi	r23, 0x00	; 0
 49c:	85 e0       	ldi	r24, 0x05	; 5
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 4a4:	8f e9       	ldi	r24, 0x9F	; 159
 4a6:	9f e0       	ldi	r25, 0x0F	; 15
 4a8:	01 97       	sbiw	r24, 0x01	; 1
 4aa:	f1 f7       	brne	.-4      	; 0x4a8 <_Z8Lcd4_Cmdc+0x26>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <_Z8Lcd4_Cmdc+0x2c>
 4ae:	00 00       	nop
 4b0:	60 e0       	ldi	r22, 0x00	; 0
 4b2:	70 e0       	ldi	r23, 0x00	; 0
 4b4:	85 e0       	ldi	r24, 0x05	; 5
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 4bc:	8f e9       	ldi	r24, 0x9F	; 159
 4be:	9f e0       	ldi	r25, 0x0F	; 15
 4c0:	01 97       	sbiw	r24, 0x01	; 1
 4c2:	f1 f7       	brne	.-4      	; 0x4c0 <_Z8Lcd4_Cmdc+0x3e>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <_Z8Lcd4_Cmdc+0x44>
 4c6:	00 00       	nop
 4c8:	cf 91       	pop	r28
 4ca:	08 95       	ret

000004cc <_Z15Lcd4_Set_Cursorcc>:
 4cc:	cf 93       	push	r28
 4ce:	81 30       	cpi	r24, 0x01	; 1
 4d0:	99 f4       	brne	.+38     	; 0x4f8 <_Z15Lcd4_Set_Cursorcc+0x2c>
 4d2:	80 e8       	ldi	r24, 0x80	; 128
 4d4:	86 0f       	add	r24, r22
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	95 95       	asr	r25
 4da:	87 95       	ror	r24
 4dc:	95 95       	asr	r25
 4de:	87 95       	ror	r24
 4e0:	95 95       	asr	r25
 4e2:	87 95       	ror	r24
 4e4:	95 95       	asr	r25
 4e6:	87 95       	ror	r24
 4e8:	c6 2f       	mov	r28, r22
 4ea:	cf 70       	andi	r28, 0x0F	; 15
 4ec:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 4f0:	8c 2f       	mov	r24, r28
 4f2:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 4f6:	14 c0       	rjmp	.+40     	; 0x520 <_Z15Lcd4_Set_Cursorcc+0x54>
 4f8:	82 30       	cpi	r24, 0x02	; 2
 4fa:	91 f4       	brne	.+36     	; 0x520 <_Z15Lcd4_Set_Cursorcc+0x54>
 4fc:	80 ec       	ldi	r24, 0xC0	; 192
 4fe:	86 0f       	add	r24, r22
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	95 95       	asr	r25
 504:	87 95       	ror	r24
 506:	95 95       	asr	r25
 508:	87 95       	ror	r24
 50a:	95 95       	asr	r25
 50c:	87 95       	ror	r24
 50e:	95 95       	asr	r25
 510:	87 95       	ror	r24
 512:	c6 2f       	mov	r28, r22
 514:	cf 70       	andi	r28, 0x0F	; 15
 516:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 51a:	8c 2f       	mov	r24, r28
 51c:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 520:	cf 91       	pop	r28
 522:	08 95       	ret

00000524 <_Z9Lcd4_Initv>:
 524:	80 e0       	ldi	r24, 0x00	; 0
 526:	0e 94 01 02 	call	0x402	; 0x402 <_Z9Lcd4_Portc>
 52a:	2f ef       	ldi	r18, 0xFF	; 255
 52c:	89 ef       	ldi	r24, 0xF9	; 249
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	21 50       	subi	r18, 0x01	; 1
 532:	80 40       	sbci	r24, 0x00	; 0
 534:	90 40       	sbci	r25, 0x00	; 0
 536:	e1 f7       	brne	.-8      	; 0x530 <_Z9Lcd4_Initv+0xc>
 538:	00 c0       	rjmp	.+0      	; 0x53a <_Z9Lcd4_Initv+0x16>
 53a:	00 00       	nop
 53c:	83 e0       	ldi	r24, 0x03	; 3
 53e:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 542:	8f e1       	ldi	r24, 0x1F	; 31
 544:	9e e4       	ldi	r25, 0x4E	; 78
 546:	01 97       	sbiw	r24, 0x01	; 1
 548:	f1 f7       	brne	.-4      	; 0x546 <_Z9Lcd4_Initv+0x22>
 54a:	00 c0       	rjmp	.+0      	; 0x54c <_Z9Lcd4_Initv+0x28>
 54c:	00 00       	nop
 54e:	83 e0       	ldi	r24, 0x03	; 3
 550:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 554:	8f ed       	ldi	r24, 0xDF	; 223
 556:	9b ea       	ldi	r25, 0xAB	; 171
 558:	01 97       	sbiw	r24, 0x01	; 1
 55a:	f1 f7       	brne	.-4      	; 0x558 <_Z9Lcd4_Initv+0x34>
 55c:	00 c0       	rjmp	.+0      	; 0x55e <_Z9Lcd4_Initv+0x3a>
 55e:	00 00       	nop
 560:	83 e0       	ldi	r24, 0x03	; 3
 562:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 566:	82 e0       	ldi	r24, 0x02	; 2
 568:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 56c:	82 e0       	ldi	r24, 0x02	; 2
 56e:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 572:	88 e0       	ldi	r24, 0x08	; 8
 574:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 578:	80 e0       	ldi	r24, 0x00	; 0
 57a:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 57e:	8c e0       	ldi	r24, 0x0C	; 12
 580:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 584:	80 e0       	ldi	r24, 0x00	; 0
 586:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 58a:	86 e0       	ldi	r24, 0x06	; 6
 58c:	0e 94 41 02 	call	0x482	; 0x482 <_Z8Lcd4_Cmdc>
 590:	08 95       	ret

00000592 <_Z15Lcd4_Write_Charc>:
 592:	cf 93       	push	r28
 594:	df 93       	push	r29
 596:	d8 2f       	mov	r29, r24
 598:	df 70       	andi	r29, 0x0F	; 15
 59a:	c8 2f       	mov	r28, r24
 59c:	c0 7f       	andi	r28, 0xF0	; 240
 59e:	61 e0       	ldi	r22, 0x01	; 1
 5a0:	70 e0       	ldi	r23, 0x00	; 0
 5a2:	86 e0       	ldi	r24, 0x06	; 6
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 5aa:	8c 2f       	mov	r24, r28
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	95 95       	asr	r25
 5b0:	87 95       	ror	r24
 5b2:	95 95       	asr	r25
 5b4:	87 95       	ror	r24
 5b6:	95 95       	asr	r25
 5b8:	87 95       	ror	r24
 5ba:	95 95       	asr	r25
 5bc:	87 95       	ror	r24
 5be:	0e 94 01 02 	call	0x402	; 0x402 <_Z9Lcd4_Portc>
 5c2:	61 e0       	ldi	r22, 0x01	; 1
 5c4:	70 e0       	ldi	r23, 0x00	; 0
 5c6:	85 e0       	ldi	r24, 0x05	; 5
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 5ce:	8f e9       	ldi	r24, 0x9F	; 159
 5d0:	9f e0       	ldi	r25, 0x0F	; 15
 5d2:	01 97       	sbiw	r24, 0x01	; 1
 5d4:	f1 f7       	brne	.-4      	; 0x5d2 <_Z15Lcd4_Write_Charc+0x40>
 5d6:	00 c0       	rjmp	.+0      	; 0x5d8 <_Z15Lcd4_Write_Charc+0x46>
 5d8:	00 00       	nop
 5da:	60 e0       	ldi	r22, 0x00	; 0
 5dc:	70 e0       	ldi	r23, 0x00	; 0
 5de:	85 e0       	ldi	r24, 0x05	; 5
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 5e6:	8f e9       	ldi	r24, 0x9F	; 159
 5e8:	9f e0       	ldi	r25, 0x0F	; 15
 5ea:	01 97       	sbiw	r24, 0x01	; 1
 5ec:	f1 f7       	brne	.-4      	; 0x5ea <_Z15Lcd4_Write_Charc+0x58>
 5ee:	00 c0       	rjmp	.+0      	; 0x5f0 <_Z15Lcd4_Write_Charc+0x5e>
 5f0:	00 00       	nop
 5f2:	8d 2f       	mov	r24, r29
 5f4:	0e 94 01 02 	call	0x402	; 0x402 <_Z9Lcd4_Portc>
 5f8:	61 e0       	ldi	r22, 0x01	; 1
 5fa:	70 e0       	ldi	r23, 0x00	; 0
 5fc:	85 e0       	ldi	r24, 0x05	; 5
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 604:	8f e9       	ldi	r24, 0x9F	; 159
 606:	9f e0       	ldi	r25, 0x0F	; 15
 608:	01 97       	sbiw	r24, 0x01	; 1
 60a:	f1 f7       	brne	.-4      	; 0x608 <_Z15Lcd4_Write_Charc+0x76>
 60c:	00 c0       	rjmp	.+0      	; 0x60e <_Z15Lcd4_Write_Charc+0x7c>
 60e:	00 00       	nop
 610:	60 e0       	ldi	r22, 0x00	; 0
 612:	70 e0       	ldi	r23, 0x00	; 0
 614:	85 e0       	ldi	r24, 0x05	; 5
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 41 00 	call	0x82	; 0x82 <_Z9pinChangeii>
 61c:	8f e9       	ldi	r24, 0x9F	; 159
 61e:	9f e0       	ldi	r25, 0x0F	; 15
 620:	01 97       	sbiw	r24, 0x01	; 1
 622:	f1 f7       	brne	.-4      	; 0x620 <_Z15Lcd4_Write_Charc+0x8e>
 624:	00 c0       	rjmp	.+0      	; 0x626 <_Z15Lcd4_Write_Charc+0x94>
 626:	00 00       	nop
 628:	df 91       	pop	r29
 62a:	cf 91       	pop	r28
 62c:	08 95       	ret

0000062e <_Z17Lcd4_Write_StringPc>:
 62e:	0f 93       	push	r16
 630:	1f 93       	push	r17
 632:	cf 93       	push	r28
 634:	df 93       	push	r29
 636:	8c 01       	movw	r16, r24
 638:	c0 e0       	ldi	r28, 0x00	; 0
 63a:	d0 e0       	ldi	r29, 0x00	; 0
 63c:	f8 01       	movw	r30, r16
 63e:	ec 0f       	add	r30, r28
 640:	fd 1f       	adc	r31, r29
 642:	80 81       	ld	r24, Z
 644:	88 23       	and	r24, r24
 646:	21 f0       	breq	.+8      	; 0x650 <_Z17Lcd4_Write_StringPc+0x22>
 648:	0e 94 c9 02 	call	0x592	; 0x592 <_Z15Lcd4_Write_Charc>
 64c:	21 96       	adiw	r28, 0x01	; 1
 64e:	f6 cf       	rjmp	.-20     	; 0x63c <_Z17Lcd4_Write_StringPc+0xe>
 650:	df 91       	pop	r29
 652:	cf 91       	pop	r28
 654:	1f 91       	pop	r17
 656:	0f 91       	pop	r16
 658:	08 95       	ret

0000065a <_Z8I2C_Initv>:
#define BITRATE(TWSR)	((F_CPU/SCL_CLK)-16)/(2*pow(4,(TWSR&((1<<TWPS0)|(1<<TWPS1)))))

void I2C_Init()			/* I2C initialize function */
{
	TWBR = BITRATE(TWSR=0x00);	/* Get bit rate register value by formula */
 65a:	11 b8       	out	0x01, r1	; 1
 65c:	8c e0       	ldi	r24, 0x0C	; 12
 65e:	80 b9       	out	0x00, r24	; 0
 660:	08 95       	ret

00000662 <_Z9I2C_Startc>:
}

uint8_t I2C_Start(char write_address)/* I2C start function */
{
	uint8_t status;		/* Declare variable */
	TWCR=(1<<TWSTA)|(1<<TWEN)|(1<<TWINT); /* Enable TWI, generate START */
 662:	94 ea       	ldi	r25, 0xA4	; 164
 664:	96 bf       	out	0x36, r25	; 54
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
 666:	06 b6       	in	r0, 0x36	; 54
 668:	07 fe       	sbrs	r0, 7
 66a:	fd cf       	rjmp	.-6      	; 0x666 <_Z9I2C_Startc+0x4>
	status=TWSR&0xF8;		/* Read TWI status register */
 66c:	91 b1       	in	r25, 0x01	; 1
 66e:	98 7f       	andi	r25, 0xF8	; 248
	if(status!=0x08)		/* Check weather START transmitted or not? */
 670:	98 30       	cpi	r25, 0x08	; 8
 672:	71 f4       	brne	.+28     	; 0x690 <_Z9I2C_Startc+0x2e>
	return 0;			/* Return 0 to indicate start condition fail */
	TWDR=write_address;		/* Write SLA+W in TWI data register */
 674:	83 b9       	out	0x03, r24	; 3
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI & clear interrupt flag */
 676:	84 e8       	ldi	r24, 0x84	; 132
 678:	86 bf       	out	0x36, r24	; 54
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
 67a:	06 b6       	in	r0, 0x36	; 54
 67c:	07 fe       	sbrs	r0, 7
 67e:	fd cf       	rjmp	.-6      	; 0x67a <_Z9I2C_Startc+0x18>
	status=TWSR&0xF8;		/* Read TWI status register */
 680:	81 b1       	in	r24, 0x01	; 1
 682:	88 7f       	andi	r24, 0xF8	; 248
	if(status==0x18)		/* Check for SLA+W transmitted &ack received */
 684:	88 31       	cpi	r24, 0x18	; 24
 686:	31 f0       	breq	.+12     	; 0x694 <_Z9I2C_Startc+0x32>
	return 1;			/* Return 1 to indicate ack received */
	if(status==0x20)		/* Check for SLA+W transmitted &nack received */
 688:	80 32       	cpi	r24, 0x20	; 32
 68a:	31 f4       	brne	.+12     	; 0x698 <_Z9I2C_Startc+0x36>
	return 2;			/* Return 2 to indicate nack received */
 68c:	82 e0       	ldi	r24, 0x02	; 2
 68e:	08 95       	ret
	uint8_t status;		/* Declare variable */
	TWCR=(1<<TWSTA)|(1<<TWEN)|(1<<TWINT); /* Enable TWI, generate START */
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
	status=TWSR&0xF8;		/* Read TWI status register */
	if(status!=0x08)		/* Check weather START transmitted or not? */
	return 0;			/* Return 0 to indicate start condition fail */
 690:	80 e0       	ldi	r24, 0x00	; 0
 692:	08 95       	ret
	TWDR=write_address;		/* Write SLA+W in TWI data register */
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI & clear interrupt flag */
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
	status=TWSR&0xF8;		/* Read TWI status register */
	if(status==0x18)		/* Check for SLA+W transmitted &ack received */
	return 1;			/* Return 1 to indicate ack received */
 694:	81 e0       	ldi	r24, 0x01	; 1
 696:	08 95       	ret
	if(status==0x20)		/* Check for SLA+W transmitted &nack received */
	return 2;			/* Return 2 to indicate nack received */
	else
	return 3;			/* Else return 3 to indicate SLA+W failed */
 698:	83 e0       	ldi	r24, 0x03	; 3
}
 69a:	08 95       	ret

0000069c <_Z18I2C_Repeated_Startc>:

uint8_t I2C_Repeated_Start(char read_address)
{
	uint8_t status;		/* Declare variable */
	TWCR=(1<<TWSTA)|(1<<TWEN)|(1<<TWINT);/* Enable TWI, generate start */
 69c:	94 ea       	ldi	r25, 0xA4	; 164
 69e:	96 bf       	out	0x36, r25	; 54
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
 6a0:	06 b6       	in	r0, 0x36	; 54
 6a2:	07 fe       	sbrs	r0, 7
 6a4:	fd cf       	rjmp	.-6      	; 0x6a0 <_Z18I2C_Repeated_Startc+0x4>
	status=TWSR&0xF8;		/* Read TWI status register */
 6a6:	91 b1       	in	r25, 0x01	; 1
 6a8:	98 7f       	andi	r25, 0xF8	; 248
	if(status!=0x10)		/* Check for repeated start transmitted */
 6aa:	90 31       	cpi	r25, 0x10	; 16
 6ac:	71 f4       	brne	.+28     	; 0x6ca <_Z18I2C_Repeated_Startc+0x2e>
	return 0;			/* Return 0 for repeated start condition fail */
	TWDR=read_address;		/* Write SLA+R in TWI data register */
 6ae:	83 b9       	out	0x03, r24	; 3
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
 6b0:	84 e8       	ldi	r24, 0x84	; 132
 6b2:	86 bf       	out	0x36, r24	; 54
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
 6b4:	06 b6       	in	r0, 0x36	; 54
 6b6:	07 fe       	sbrs	r0, 7
 6b8:	fd cf       	rjmp	.-6      	; 0x6b4 <_Z18I2C_Repeated_Startc+0x18>
	status=TWSR&0xF8;		/* Read TWI status register */
 6ba:	81 b1       	in	r24, 0x01	; 1
 6bc:	88 7f       	andi	r24, 0xF8	; 248
	if(status==0x40)		/* Check for SLA+R transmitted &ack received */
 6be:	80 34       	cpi	r24, 0x40	; 64
 6c0:	31 f0       	breq	.+12     	; 0x6ce <_Z18I2C_Repeated_Startc+0x32>
	return 1;			/* Return 1 to indicate ack received */
	if(status==0x48)		/* Check for SLA+R transmitted &nack received */
 6c2:	88 34       	cpi	r24, 0x48	; 72
 6c4:	31 f4       	brne	.+12     	; 0x6d2 <_Z18I2C_Repeated_Startc+0x36>
	return 2;			/* Return 2 to indicate nack received */
 6c6:	82 e0       	ldi	r24, 0x02	; 2
 6c8:	08 95       	ret
	uint8_t status;		/* Declare variable */
	TWCR=(1<<TWSTA)|(1<<TWEN)|(1<<TWINT);/* Enable TWI, generate start */
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
	status=TWSR&0xF8;		/* Read TWI status register */
	if(status!=0x10)		/* Check for repeated start transmitted */
	return 0;			/* Return 0 for repeated start condition fail */
 6ca:	80 e0       	ldi	r24, 0x00	; 0
 6cc:	08 95       	ret
	TWDR=read_address;		/* Write SLA+R in TWI data register */
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
	status=TWSR&0xF8;		/* Read TWI status register */
	if(status==0x40)		/* Check for SLA+R transmitted &ack received */
	return 1;			/* Return 1 to indicate ack received */
 6ce:	81 e0       	ldi	r24, 0x01	; 1
 6d0:	08 95       	ret
	if(status==0x48)		/* Check for SLA+R transmitted &nack received */
	return 2;			/* Return 2 to indicate nack received */
	else
	return 3;			/* Else return 3 to indicate SLA+W failed */
 6d2:	83 e0       	ldi	r24, 0x03	; 3
}
 6d4:	08 95       	ret

000006d6 <_Z9I2C_Writec>:

uint8_t I2C_Write(char data)
{
	uint8_t status;		/* Declare variable */
	TWDR=data;			/* Copy data in TWI data register */
 6d6:	83 b9       	out	0x03, r24	; 3
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
 6d8:	84 e8       	ldi	r24, 0x84	; 132
 6da:	86 bf       	out	0x36, r24	; 54
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
 6dc:	06 b6       	in	r0, 0x36	; 54
 6de:	07 fe       	sbrs	r0, 7
 6e0:	fd cf       	rjmp	.-6      	; 0x6dc <_Z9I2C_Writec+0x6>
	status=TWSR&0xF8;		/* Read TWI status register */
 6e2:	81 b1       	in	r24, 0x01	; 1
 6e4:	88 7f       	andi	r24, 0xF8	; 248
	if(status==0x28)		/* Check for data transmitted &ack received */
 6e6:	88 32       	cpi	r24, 0x28	; 40
 6e8:	21 f0       	breq	.+8      	; 0x6f2 <_Z9I2C_Writec+0x1c>
	return 0;			/* Return 0 to indicate ack received */
	if(status==0x30)		/* Check for data transmitted &nack received */
 6ea:	80 33       	cpi	r24, 0x30	; 48
 6ec:	21 f4       	brne	.+8      	; 0x6f6 <_Z9I2C_Writec+0x20>
	return 1;			/* Return 1 to indicate nack received */
 6ee:	81 e0       	ldi	r24, 0x01	; 1
 6f0:	08 95       	ret
	TWDR=data;			/* Copy data in TWI data register */
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
	status=TWSR&0xF8;		/* Read TWI status register */
	if(status==0x28)		/* Check for data transmitted &ack received */
	return 0;			/* Return 0 to indicate ack received */
 6f2:	80 e0       	ldi	r24, 0x00	; 0
 6f4:	08 95       	ret
	if(status==0x30)		/* Check for data transmitted &nack received */
	return 1;			/* Return 1 to indicate nack received */
	else
	return 2;			/* Else return 2 for data transmission failure */
 6f6:	82 e0       	ldi	r24, 0x02	; 2
}
 6f8:	08 95       	ret

000006fa <_Z12I2C_Read_Ackv>:



char I2C_Read_Ack()		/* I2C read ack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT)|(1<<TWEA); /* Enable TWI, generation of ack */
 6fa:	84 ec       	ldi	r24, 0xC4	; 196
 6fc:	86 bf       	out	0x36, r24	; 54
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
 6fe:	06 b6       	in	r0, 0x36	; 54
 700:	07 fe       	sbrs	r0, 7
 702:	fd cf       	rjmp	.-6      	; 0x6fe <_Z12I2C_Read_Ackv+0x4>
	return TWDR;			/* Return received data */
 704:	83 b1       	in	r24, 0x03	; 3
}
 706:	08 95       	ret

00000708 <_Z13I2C_Read_Nackv>:

char I2C_Read_Nack()		/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
 708:	84 e8       	ldi	r24, 0x84	; 132
 70a:	86 bf       	out	0x36, r24	; 54
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
 70c:	06 b6       	in	r0, 0x36	; 54
 70e:	07 fe       	sbrs	r0, 7
 710:	fd cf       	rjmp	.-6      	; 0x70c <_Z13I2C_Read_Nackv+0x4>
	return TWDR;		/* Return received data */
 712:	83 b1       	in	r24, 0x03	; 3
}
 714:	08 95       	ret

00000716 <_Z8I2C_Stopv>:


void I2C_Stop()			/* I2C stop function */
{
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);/* Enable TWI, generate stop */
 716:	84 e9       	ldi	r24, 0x94	; 148
 718:	86 bf       	out	0x36, r24	; 54
	while(TWCR&(1<<TWSTO));	/* Wait until stop condition execution */
 71a:	06 b6       	in	r0, 0x36	; 54
 71c:	04 fc       	sbrc	r0, 4
 71e:	fd cf       	rjmp	.-6      	; 0x71a <_Z8I2C_Stopv+0x4>
 720:	08 95       	ret

00000722 <main>:
#define client_Read_Address		0x21
#define	count				10


int main(void)
{
 722:	cf 93       	push	r28
 724:	df 93       	push	r29
 726:	cd b7       	in	r28, 0x3d	; 61
 728:	de b7       	in	r29, 0x3e	; 62
 72a:	2a 97       	sbiw	r28, 0x0a	; 10
 72c:	0f b6       	in	r0, 0x3f	; 63
 72e:	f8 94       	cli
 730:	de bf       	out	0x3e, r29	; 62
 732:	0f be       	out	0x3f, r0	; 63
 734:	cd bf       	out	0x3d, r28	; 61

DDRA = 0xFF;
 736:	8f ef       	ldi	r24, 0xFF	; 255
 738:	8a bb       	out	0x1a, r24	; 26

char buffer[10];

Lcd4_Init();				/* Initialize LCD */
 73a:	0e 94 92 02 	call	0x524	; 0x524 <_Z9Lcd4_Initv>
I2C_Init();			/* Initialize I2C */
 73e:	0e 94 2d 03 	call	0x65a	; 0x65a <_Z8I2C_Initv>

Lcd4_Set_Cursor(1,0);
 742:	60 e0       	ldi	r22, 0x00	; 0
 744:	81 e0       	ldi	r24, 0x01	; 1
 746:	0e 94 66 02 	call	0x4cc	; 0x4cc <_Z15Lcd4_Set_Cursorcc>
Lcd4_Write_String("Master Device");
 74a:	80 e6       	ldi	r24, 0x60	; 96
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	0e 94 17 03 	call	0x62e	; 0x62e <_Z17Lcd4_Write_StringPc>



while (1)
{
	Lcd4_Set_Cursor(2,0);
 752:	60 e0       	ldi	r22, 0x00	; 0
 754:	82 e0       	ldi	r24, 0x02	; 2
 756:	0e 94 66 02 	call	0x4cc	; 0x4cc <_Z15Lcd4_Set_Cursorcc>
	Lcd4_Write_String("Sending :       ");
 75a:	8e e6       	ldi	r24, 0x6E	; 110
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	0e 94 17 03 	call	0x62e	; 0x62e <_Z17Lcd4_Write_StringPc>
	
	I2C_Start(client_Write_Address);/* Start I2C with SLA+W */
 762:	80 e2       	ldi	r24, 0x20	; 32
 764:	0e 94 31 03 	call	0x662	; 0x662 <_Z9I2C_Startc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 768:	8f e1       	ldi	r24, 0x1F	; 31
 76a:	9e e4       	ldi	r25, 0x4E	; 78
 76c:	01 97       	sbiw	r24, 0x01	; 1
 76e:	f1 f7       	brne	.-4      	; 0x76c <main+0x4a>
 770:	00 c0       	rjmp	.+0      	; 0x772 <main+0x50>
 772:	00 00       	nop
	_delay_ms(5);
	for (uint8_t i = 0; i < count ; i++)
 774:	10 e0       	ldi	r17, 0x00	; 0
 776:	1a 30       	cpi	r17, 0x0A	; 10
 778:	40 f5       	brcc	.+80     	; 0x7ca <main+0xa8>
	{
		sprintf(buffer, "%d    ",i);
 77a:	1f 92       	push	r1
 77c:	1f 93       	push	r17
 77e:	8f e7       	ldi	r24, 0x7F	; 127
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	9f 93       	push	r25
 784:	8f 93       	push	r24
 786:	ce 01       	movw	r24, r28
 788:	01 96       	adiw	r24, 0x01	; 1
 78a:	7c 01       	movw	r14, r24
 78c:	9f 93       	push	r25
 78e:	8f 93       	push	r24
 790:	0e 94 3a 04 	call	0x874	; 0x874 <sprintf>
		
		Lcd4_Set_Cursor(2,13);
 794:	6d e0       	ldi	r22, 0x0D	; 13
 796:	82 e0       	ldi	r24, 0x02	; 2
 798:	0e 94 66 02 	call	0x4cc	; 0x4cc <_Z15Lcd4_Set_Cursorcc>
		Lcd4_Write_String(buffer);
 79c:	c7 01       	movw	r24, r14
 79e:	0e 94 17 03 	call	0x62e	; 0x62e <_Z17Lcd4_Write_StringPc>
		I2C_Write(i);	/* Send Incrementing count */
 7a2:	81 2f       	mov	r24, r17
 7a4:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <_Z9I2C_Writec>
 7a8:	9f ef       	ldi	r25, 0xFF	; 255
 7aa:	29 e6       	ldi	r18, 0x69	; 105
 7ac:	88 e1       	ldi	r24, 0x18	; 24
 7ae:	91 50       	subi	r25, 0x01	; 1
 7b0:	20 40       	sbci	r18, 0x00	; 0
 7b2:	80 40       	sbci	r24, 0x00	; 0
 7b4:	e1 f7       	brne	.-8      	; 0x7ae <main+0x8c>
 7b6:	00 c0       	rjmp	.+0      	; 0x7b8 <main+0x96>
 7b8:	00 00       	nop
	Lcd4_Set_Cursor(2,0);
	Lcd4_Write_String("Sending :       ");
	
	I2C_Start(client_Write_Address);/* Start I2C with SLA+W */
	_delay_ms(5);
	for (uint8_t i = 0; i < count ; i++)
 7ba:	1f 5f       	subi	r17, 0xFF	; 255
 7bc:	0f 90       	pop	r0
 7be:	0f 90       	pop	r0
 7c0:	0f 90       	pop	r0
 7c2:	0f 90       	pop	r0
 7c4:	0f 90       	pop	r0
 7c6:	0f 90       	pop	r0
 7c8:	d6 cf       	rjmp	.-84     	; 0x776 <main+0x54>
		Lcd4_Write_String(buffer);
		I2C_Write(i);	/* Send Incrementing count */
		_delay_ms(500);
	}
	
	Lcd4_Set_Cursor(2,0);
 7ca:	60 e0       	ldi	r22, 0x00	; 0
 7cc:	82 e0       	ldi	r24, 0x02	; 2
 7ce:	0e 94 66 02 	call	0x4cc	; 0x4cc <_Z15Lcd4_Set_Cursorcc>
	Lcd4_Write_String("Receiving :       ");
 7d2:	86 e8       	ldi	r24, 0x86	; 134
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	0e 94 17 03 	call	0x62e	; 0x62e <_Z17Lcd4_Write_StringPc>
	
	I2C_Repeated_Start(client_Read_Address);/* Repeated Start with SLA+R */
 7da:	81 e2       	ldi	r24, 0x21	; 33
 7dc:	0e 94 4e 03 	call	0x69c	; 0x69c <_Z18I2C_Repeated_Startc>
 7e0:	8f e1       	ldi	r24, 0x1F	; 31
 7e2:	9e e4       	ldi	r25, 0x4E	; 78
 7e4:	01 97       	sbiw	r24, 0x01	; 1
 7e6:	f1 f7       	brne	.-4      	; 0x7e4 <main+0xc2>
 7e8:	00 c0       	rjmp	.+0      	; 0x7ea <main+0xc8>
 7ea:	00 00       	nop
	_delay_ms(5);
	for (uint8_t i = 0; i < count; i++)
 7ec:	10 e0       	ldi	r17, 0x00	; 0
 7ee:	1a 30       	cpi	r17, 0x0A	; 10
 7f0:	f0 f5       	brcc	.+124    	; 0x86e <main+0x14c>
	{
		if(i < count - 1)
 7f2:	19 30       	cpi	r17, 0x09	; 9
 7f4:	a8 f4       	brcc	.+42     	; 0x820 <main+0xfe>
		sprintf(buffer, "%d    ", I2C_Read_Ack());/* Read & Ack of data */
 7f6:	0e 94 7d 03 	call	0x6fa	; 0x6fa <_Z12I2C_Read_Ackv>
 7fa:	1f 92       	push	r1
 7fc:	8f 93       	push	r24
 7fe:	8f e7       	ldi	r24, 0x7F	; 127
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	9f 93       	push	r25
 804:	8f 93       	push	r24
 806:	ce 01       	movw	r24, r28
 808:	01 96       	adiw	r24, 0x01	; 1
 80a:	9f 93       	push	r25
 80c:	8f 93       	push	r24
 80e:	0e 94 3a 04 	call	0x874	; 0x874 <sprintf>
 812:	0f 90       	pop	r0
 814:	0f 90       	pop	r0
 816:	0f 90       	pop	r0
 818:	0f 90       	pop	r0
 81a:	0f 90       	pop	r0
 81c:	0f 90       	pop	r0
 81e:	14 c0       	rjmp	.+40     	; 0x848 <main+0x126>
		else
		sprintf(buffer, "%d    ", I2C_Read_Nack());/* Read & Nack to data */
 820:	0e 94 84 03 	call	0x708	; 0x708 <_Z13I2C_Read_Nackv>
 824:	1f 92       	push	r1
 826:	8f 93       	push	r24
 828:	8f e7       	ldi	r24, 0x7F	; 127
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	9f 93       	push	r25
 82e:	8f 93       	push	r24
 830:	ce 01       	movw	r24, r28
 832:	01 96       	adiw	r24, 0x01	; 1
 834:	9f 93       	push	r25
 836:	8f 93       	push	r24
 838:	0e 94 3a 04 	call	0x874	; 0x874 <sprintf>
 83c:	0f 90       	pop	r0
 83e:	0f 90       	pop	r0
 840:	0f 90       	pop	r0
 842:	0f 90       	pop	r0
 844:	0f 90       	pop	r0
 846:	0f 90       	pop	r0
		
		Lcd4_Set_Cursor(2,13);
 848:	6d e0       	ldi	r22, 0x0D	; 13
 84a:	82 e0       	ldi	r24, 0x02	; 2
 84c:	0e 94 66 02 	call	0x4cc	; 0x4cc <_Z15Lcd4_Set_Cursorcc>
		Lcd4_Write_String(buffer);
 850:	ce 01       	movw	r24, r28
 852:	01 96       	adiw	r24, 0x01	; 1
 854:	0e 94 17 03 	call	0x62e	; 0x62e <_Z17Lcd4_Write_StringPc>
 858:	9f ef       	ldi	r25, 0xFF	; 255
 85a:	29 e6       	ldi	r18, 0x69	; 105
 85c:	88 e1       	ldi	r24, 0x18	; 24
 85e:	91 50       	subi	r25, 0x01	; 1
 860:	20 40       	sbci	r18, 0x00	; 0
 862:	80 40       	sbci	r24, 0x00	; 0
 864:	e1 f7       	brne	.-8      	; 0x85e <main+0x13c>
 866:	00 c0       	rjmp	.+0      	; 0x868 <main+0x146>
 868:	00 00       	nop
	Lcd4_Set_Cursor(2,0);
	Lcd4_Write_String("Receiving :       ");
	
	I2C_Repeated_Start(client_Read_Address);/* Repeated Start with SLA+R */
	_delay_ms(5);
	for (uint8_t i = 0; i < count; i++)
 86a:	1f 5f       	subi	r17, 0xFF	; 255
 86c:	c0 cf       	rjmp	.-128    	; 0x7ee <main+0xcc>
		Lcd4_Set_Cursor(2,13);
		Lcd4_Write_String(buffer);
		
		_delay_ms(500);
	}
	I2C_Stop();		/* Stop I2C */
 86e:	0e 94 8b 03 	call	0x716	; 0x716 <_Z8I2C_Stopv>
Lcd4_Set_Cursor(1,0);
Lcd4_Write_String("Master Device");



while (1)
 872:	6f cf       	rjmp	.-290    	; 0x752 <main+0x30>

00000874 <sprintf>:
 874:	ae e0       	ldi	r26, 0x0E	; 14
 876:	b0 e0       	ldi	r27, 0x00	; 0
 878:	e0 e4       	ldi	r30, 0x40	; 64
 87a:	f4 e0       	ldi	r31, 0x04	; 4
 87c:	0c 94 fb 06 	jmp	0xdf6	; 0xdf6 <__prologue_saves__+0x1c>
 880:	0d 89       	ldd	r16, Y+21	; 0x15
 882:	1e 89       	ldd	r17, Y+22	; 0x16
 884:	86 e0       	ldi	r24, 0x06	; 6
 886:	8c 83       	std	Y+4, r24	; 0x04
 888:	1a 83       	std	Y+2, r17	; 0x02
 88a:	09 83       	std	Y+1, r16	; 0x01
 88c:	8f ef       	ldi	r24, 0xFF	; 255
 88e:	9f e7       	ldi	r25, 0x7F	; 127
 890:	9e 83       	std	Y+6, r25	; 0x06
 892:	8d 83       	std	Y+5, r24	; 0x05
 894:	ae 01       	movw	r20, r28
 896:	47 5e       	subi	r20, 0xE7	; 231
 898:	5f 4f       	sbci	r21, 0xFF	; 255
 89a:	6f 89       	ldd	r22, Y+23	; 0x17
 89c:	78 8d       	ldd	r23, Y+24	; 0x18
 89e:	ce 01       	movw	r24, r28
 8a0:	01 96       	adiw	r24, 0x01	; 1
 8a2:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <vfprintf>
 8a6:	ef 81       	ldd	r30, Y+7	; 0x07
 8a8:	f8 85       	ldd	r31, Y+8	; 0x08
 8aa:	e0 0f       	add	r30, r16
 8ac:	f1 1f       	adc	r31, r17
 8ae:	10 82       	st	Z, r1
 8b0:	2e 96       	adiw	r28, 0x0e	; 14
 8b2:	e4 e0       	ldi	r30, 0x04	; 4
 8b4:	0c 94 17 07 	jmp	0xe2e	; 0xe2e <__epilogue_restores__+0x1c>

000008b8 <vfprintf>:
 8b8:	ab e0       	ldi	r26, 0x0B	; 11
 8ba:	b0 e0       	ldi	r27, 0x00	; 0
 8bc:	e2 e6       	ldi	r30, 0x62	; 98
 8be:	f4 e0       	ldi	r31, 0x04	; 4
 8c0:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__prologue_saves__>
 8c4:	6c 01       	movw	r12, r24
 8c6:	7b 01       	movw	r14, r22
 8c8:	8a 01       	movw	r16, r20
 8ca:	fc 01       	movw	r30, r24
 8cc:	17 82       	std	Z+7, r1	; 0x07
 8ce:	16 82       	std	Z+6, r1	; 0x06
 8d0:	83 81       	ldd	r24, Z+3	; 0x03
 8d2:	81 ff       	sbrs	r24, 1
 8d4:	cc c1       	rjmp	.+920    	; 0xc6e <vfprintf+0x3b6>
 8d6:	ce 01       	movw	r24, r28
 8d8:	01 96       	adiw	r24, 0x01	; 1
 8da:	3c 01       	movw	r6, r24
 8dc:	f6 01       	movw	r30, r12
 8de:	93 81       	ldd	r25, Z+3	; 0x03
 8e0:	f7 01       	movw	r30, r14
 8e2:	93 fd       	sbrc	r25, 3
 8e4:	85 91       	lpm	r24, Z+
 8e6:	93 ff       	sbrs	r25, 3
 8e8:	81 91       	ld	r24, Z+
 8ea:	7f 01       	movw	r14, r30
 8ec:	88 23       	and	r24, r24
 8ee:	09 f4       	brne	.+2      	; 0x8f2 <vfprintf+0x3a>
 8f0:	ba c1       	rjmp	.+884    	; 0xc66 <vfprintf+0x3ae>
 8f2:	85 32       	cpi	r24, 0x25	; 37
 8f4:	39 f4       	brne	.+14     	; 0x904 <vfprintf+0x4c>
 8f6:	93 fd       	sbrc	r25, 3
 8f8:	85 91       	lpm	r24, Z+
 8fa:	93 ff       	sbrs	r25, 3
 8fc:	81 91       	ld	r24, Z+
 8fe:	7f 01       	movw	r14, r30
 900:	85 32       	cpi	r24, 0x25	; 37
 902:	29 f4       	brne	.+10     	; 0x90e <vfprintf+0x56>
 904:	b6 01       	movw	r22, r12
 906:	90 e0       	ldi	r25, 0x00	; 0
 908:	0e 94 53 06 	call	0xca6	; 0xca6 <fputc>
 90c:	e7 cf       	rjmp	.-50     	; 0x8dc <vfprintf+0x24>
 90e:	91 2c       	mov	r9, r1
 910:	21 2c       	mov	r2, r1
 912:	31 2c       	mov	r3, r1
 914:	ff e1       	ldi	r31, 0x1F	; 31
 916:	f3 15       	cp	r31, r3
 918:	d8 f0       	brcs	.+54     	; 0x950 <vfprintf+0x98>
 91a:	8b 32       	cpi	r24, 0x2B	; 43
 91c:	79 f0       	breq	.+30     	; 0x93c <vfprintf+0x84>
 91e:	38 f4       	brcc	.+14     	; 0x92e <vfprintf+0x76>
 920:	80 32       	cpi	r24, 0x20	; 32
 922:	79 f0       	breq	.+30     	; 0x942 <vfprintf+0x8a>
 924:	83 32       	cpi	r24, 0x23	; 35
 926:	a1 f4       	brne	.+40     	; 0x950 <vfprintf+0x98>
 928:	23 2d       	mov	r18, r3
 92a:	20 61       	ori	r18, 0x10	; 16
 92c:	1d c0       	rjmp	.+58     	; 0x968 <vfprintf+0xb0>
 92e:	8d 32       	cpi	r24, 0x2D	; 45
 930:	61 f0       	breq	.+24     	; 0x94a <vfprintf+0x92>
 932:	80 33       	cpi	r24, 0x30	; 48
 934:	69 f4       	brne	.+26     	; 0x950 <vfprintf+0x98>
 936:	23 2d       	mov	r18, r3
 938:	21 60       	ori	r18, 0x01	; 1
 93a:	16 c0       	rjmp	.+44     	; 0x968 <vfprintf+0xb0>
 93c:	83 2d       	mov	r24, r3
 93e:	82 60       	ori	r24, 0x02	; 2
 940:	38 2e       	mov	r3, r24
 942:	e3 2d       	mov	r30, r3
 944:	e4 60       	ori	r30, 0x04	; 4
 946:	3e 2e       	mov	r3, r30
 948:	2a c0       	rjmp	.+84     	; 0x99e <vfprintf+0xe6>
 94a:	f3 2d       	mov	r31, r3
 94c:	f8 60       	ori	r31, 0x08	; 8
 94e:	1d c0       	rjmp	.+58     	; 0x98a <vfprintf+0xd2>
 950:	37 fc       	sbrc	r3, 7
 952:	2d c0       	rjmp	.+90     	; 0x9ae <vfprintf+0xf6>
 954:	20 ed       	ldi	r18, 0xD0	; 208
 956:	28 0f       	add	r18, r24
 958:	2a 30       	cpi	r18, 0x0A	; 10
 95a:	40 f0       	brcs	.+16     	; 0x96c <vfprintf+0xb4>
 95c:	8e 32       	cpi	r24, 0x2E	; 46
 95e:	b9 f4       	brne	.+46     	; 0x98e <vfprintf+0xd6>
 960:	36 fc       	sbrc	r3, 6
 962:	81 c1       	rjmp	.+770    	; 0xc66 <vfprintf+0x3ae>
 964:	23 2d       	mov	r18, r3
 966:	20 64       	ori	r18, 0x40	; 64
 968:	32 2e       	mov	r3, r18
 96a:	19 c0       	rjmp	.+50     	; 0x99e <vfprintf+0xe6>
 96c:	36 fe       	sbrs	r3, 6
 96e:	06 c0       	rjmp	.+12     	; 0x97c <vfprintf+0xc4>
 970:	8a e0       	ldi	r24, 0x0A	; 10
 972:	98 9e       	mul	r9, r24
 974:	20 0d       	add	r18, r0
 976:	11 24       	eor	r1, r1
 978:	92 2e       	mov	r9, r18
 97a:	11 c0       	rjmp	.+34     	; 0x99e <vfprintf+0xe6>
 97c:	ea e0       	ldi	r30, 0x0A	; 10
 97e:	2e 9e       	mul	r2, r30
 980:	20 0d       	add	r18, r0
 982:	11 24       	eor	r1, r1
 984:	22 2e       	mov	r2, r18
 986:	f3 2d       	mov	r31, r3
 988:	f0 62       	ori	r31, 0x20	; 32
 98a:	3f 2e       	mov	r3, r31
 98c:	08 c0       	rjmp	.+16     	; 0x99e <vfprintf+0xe6>
 98e:	8c 36       	cpi	r24, 0x6C	; 108
 990:	21 f4       	brne	.+8      	; 0x99a <vfprintf+0xe2>
 992:	83 2d       	mov	r24, r3
 994:	80 68       	ori	r24, 0x80	; 128
 996:	38 2e       	mov	r3, r24
 998:	02 c0       	rjmp	.+4      	; 0x99e <vfprintf+0xe6>
 99a:	88 36       	cpi	r24, 0x68	; 104
 99c:	41 f4       	brne	.+16     	; 0x9ae <vfprintf+0xf6>
 99e:	f7 01       	movw	r30, r14
 9a0:	93 fd       	sbrc	r25, 3
 9a2:	85 91       	lpm	r24, Z+
 9a4:	93 ff       	sbrs	r25, 3
 9a6:	81 91       	ld	r24, Z+
 9a8:	7f 01       	movw	r14, r30
 9aa:	81 11       	cpse	r24, r1
 9ac:	b3 cf       	rjmp	.-154    	; 0x914 <vfprintf+0x5c>
 9ae:	98 2f       	mov	r25, r24
 9b0:	9f 7d       	andi	r25, 0xDF	; 223
 9b2:	95 54       	subi	r25, 0x45	; 69
 9b4:	93 30       	cpi	r25, 0x03	; 3
 9b6:	28 f4       	brcc	.+10     	; 0x9c2 <vfprintf+0x10a>
 9b8:	0c 5f       	subi	r16, 0xFC	; 252
 9ba:	1f 4f       	sbci	r17, 0xFF	; 255
 9bc:	9f e3       	ldi	r25, 0x3F	; 63
 9be:	99 83       	std	Y+1, r25	; 0x01
 9c0:	0d c0       	rjmp	.+26     	; 0x9dc <vfprintf+0x124>
 9c2:	83 36       	cpi	r24, 0x63	; 99
 9c4:	31 f0       	breq	.+12     	; 0x9d2 <vfprintf+0x11a>
 9c6:	83 37       	cpi	r24, 0x73	; 115
 9c8:	71 f0       	breq	.+28     	; 0x9e6 <vfprintf+0x12e>
 9ca:	83 35       	cpi	r24, 0x53	; 83
 9cc:	09 f0       	breq	.+2      	; 0x9d0 <vfprintf+0x118>
 9ce:	59 c0       	rjmp	.+178    	; 0xa82 <vfprintf+0x1ca>
 9d0:	21 c0       	rjmp	.+66     	; 0xa14 <vfprintf+0x15c>
 9d2:	f8 01       	movw	r30, r16
 9d4:	80 81       	ld	r24, Z
 9d6:	89 83       	std	Y+1, r24	; 0x01
 9d8:	0e 5f       	subi	r16, 0xFE	; 254
 9da:	1f 4f       	sbci	r17, 0xFF	; 255
 9dc:	88 24       	eor	r8, r8
 9de:	83 94       	inc	r8
 9e0:	91 2c       	mov	r9, r1
 9e2:	53 01       	movw	r10, r6
 9e4:	13 c0       	rjmp	.+38     	; 0xa0c <vfprintf+0x154>
 9e6:	28 01       	movw	r4, r16
 9e8:	f2 e0       	ldi	r31, 0x02	; 2
 9ea:	4f 0e       	add	r4, r31
 9ec:	51 1c       	adc	r5, r1
 9ee:	f8 01       	movw	r30, r16
 9f0:	a0 80       	ld	r10, Z
 9f2:	b1 80       	ldd	r11, Z+1	; 0x01
 9f4:	36 fe       	sbrs	r3, 6
 9f6:	03 c0       	rjmp	.+6      	; 0x9fe <vfprintf+0x146>
 9f8:	69 2d       	mov	r22, r9
 9fa:	70 e0       	ldi	r23, 0x00	; 0
 9fc:	02 c0       	rjmp	.+4      	; 0xa02 <vfprintf+0x14a>
 9fe:	6f ef       	ldi	r22, 0xFF	; 255
 a00:	7f ef       	ldi	r23, 0xFF	; 255
 a02:	c5 01       	movw	r24, r10
 a04:	0e 94 48 06 	call	0xc90	; 0xc90 <strnlen>
 a08:	4c 01       	movw	r8, r24
 a0a:	82 01       	movw	r16, r4
 a0c:	f3 2d       	mov	r31, r3
 a0e:	ff 77       	andi	r31, 0x7F	; 127
 a10:	3f 2e       	mov	r3, r31
 a12:	16 c0       	rjmp	.+44     	; 0xa40 <vfprintf+0x188>
 a14:	28 01       	movw	r4, r16
 a16:	22 e0       	ldi	r18, 0x02	; 2
 a18:	42 0e       	add	r4, r18
 a1a:	51 1c       	adc	r5, r1
 a1c:	f8 01       	movw	r30, r16
 a1e:	a0 80       	ld	r10, Z
 a20:	b1 80       	ldd	r11, Z+1	; 0x01
 a22:	36 fe       	sbrs	r3, 6
 a24:	03 c0       	rjmp	.+6      	; 0xa2c <vfprintf+0x174>
 a26:	69 2d       	mov	r22, r9
 a28:	70 e0       	ldi	r23, 0x00	; 0
 a2a:	02 c0       	rjmp	.+4      	; 0xa30 <vfprintf+0x178>
 a2c:	6f ef       	ldi	r22, 0xFF	; 255
 a2e:	7f ef       	ldi	r23, 0xFF	; 255
 a30:	c5 01       	movw	r24, r10
 a32:	0e 94 3d 06 	call	0xc7a	; 0xc7a <strnlen_P>
 a36:	4c 01       	movw	r8, r24
 a38:	f3 2d       	mov	r31, r3
 a3a:	f0 68       	ori	r31, 0x80	; 128
 a3c:	3f 2e       	mov	r3, r31
 a3e:	82 01       	movw	r16, r4
 a40:	33 fc       	sbrc	r3, 3
 a42:	1b c0       	rjmp	.+54     	; 0xa7a <vfprintf+0x1c2>
 a44:	82 2d       	mov	r24, r2
 a46:	90 e0       	ldi	r25, 0x00	; 0
 a48:	88 16       	cp	r8, r24
 a4a:	99 06       	cpc	r9, r25
 a4c:	b0 f4       	brcc	.+44     	; 0xa7a <vfprintf+0x1c2>
 a4e:	b6 01       	movw	r22, r12
 a50:	80 e2       	ldi	r24, 0x20	; 32
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	0e 94 53 06 	call	0xca6	; 0xca6 <fputc>
 a58:	2a 94       	dec	r2
 a5a:	f4 cf       	rjmp	.-24     	; 0xa44 <vfprintf+0x18c>
 a5c:	f5 01       	movw	r30, r10
 a5e:	37 fc       	sbrc	r3, 7
 a60:	85 91       	lpm	r24, Z+
 a62:	37 fe       	sbrs	r3, 7
 a64:	81 91       	ld	r24, Z+
 a66:	5f 01       	movw	r10, r30
 a68:	b6 01       	movw	r22, r12
 a6a:	90 e0       	ldi	r25, 0x00	; 0
 a6c:	0e 94 53 06 	call	0xca6	; 0xca6 <fputc>
 a70:	21 10       	cpse	r2, r1
 a72:	2a 94       	dec	r2
 a74:	21 e0       	ldi	r18, 0x01	; 1
 a76:	82 1a       	sub	r8, r18
 a78:	91 08       	sbc	r9, r1
 a7a:	81 14       	cp	r8, r1
 a7c:	91 04       	cpc	r9, r1
 a7e:	71 f7       	brne	.-36     	; 0xa5c <vfprintf+0x1a4>
 a80:	e8 c0       	rjmp	.+464    	; 0xc52 <vfprintf+0x39a>
 a82:	84 36       	cpi	r24, 0x64	; 100
 a84:	11 f0       	breq	.+4      	; 0xa8a <vfprintf+0x1d2>
 a86:	89 36       	cpi	r24, 0x69	; 105
 a88:	41 f5       	brne	.+80     	; 0xada <vfprintf+0x222>
 a8a:	f8 01       	movw	r30, r16
 a8c:	37 fe       	sbrs	r3, 7
 a8e:	07 c0       	rjmp	.+14     	; 0xa9e <vfprintf+0x1e6>
 a90:	60 81       	ld	r22, Z
 a92:	71 81       	ldd	r23, Z+1	; 0x01
 a94:	82 81       	ldd	r24, Z+2	; 0x02
 a96:	93 81       	ldd	r25, Z+3	; 0x03
 a98:	0c 5f       	subi	r16, 0xFC	; 252
 a9a:	1f 4f       	sbci	r17, 0xFF	; 255
 a9c:	08 c0       	rjmp	.+16     	; 0xaae <vfprintf+0x1f6>
 a9e:	60 81       	ld	r22, Z
 aa0:	71 81       	ldd	r23, Z+1	; 0x01
 aa2:	07 2e       	mov	r0, r23
 aa4:	00 0c       	add	r0, r0
 aa6:	88 0b       	sbc	r24, r24
 aa8:	99 0b       	sbc	r25, r25
 aaa:	0e 5f       	subi	r16, 0xFE	; 254
 aac:	1f 4f       	sbci	r17, 0xFF	; 255
 aae:	f3 2d       	mov	r31, r3
 ab0:	ff 76       	andi	r31, 0x6F	; 111
 ab2:	3f 2e       	mov	r3, r31
 ab4:	97 ff       	sbrs	r25, 7
 ab6:	09 c0       	rjmp	.+18     	; 0xaca <vfprintf+0x212>
 ab8:	90 95       	com	r25
 aba:	80 95       	com	r24
 abc:	70 95       	com	r23
 abe:	61 95       	neg	r22
 ac0:	7f 4f       	sbci	r23, 0xFF	; 255
 ac2:	8f 4f       	sbci	r24, 0xFF	; 255
 ac4:	9f 4f       	sbci	r25, 0xFF	; 255
 ac6:	f0 68       	ori	r31, 0x80	; 128
 ac8:	3f 2e       	mov	r3, r31
 aca:	2a e0       	ldi	r18, 0x0A	; 10
 acc:	30 e0       	ldi	r19, 0x00	; 0
 ace:	a3 01       	movw	r20, r6
 ad0:	0e 94 8f 06 	call	0xd1e	; 0xd1e <__ultoa_invert>
 ad4:	88 2e       	mov	r8, r24
 ad6:	86 18       	sub	r8, r6
 ad8:	45 c0       	rjmp	.+138    	; 0xb64 <vfprintf+0x2ac>
 ada:	85 37       	cpi	r24, 0x75	; 117
 adc:	31 f4       	brne	.+12     	; 0xaea <vfprintf+0x232>
 ade:	23 2d       	mov	r18, r3
 ae0:	2f 7e       	andi	r18, 0xEF	; 239
 ae2:	b2 2e       	mov	r11, r18
 ae4:	2a e0       	ldi	r18, 0x0A	; 10
 ae6:	30 e0       	ldi	r19, 0x00	; 0
 ae8:	25 c0       	rjmp	.+74     	; 0xb34 <vfprintf+0x27c>
 aea:	93 2d       	mov	r25, r3
 aec:	99 7f       	andi	r25, 0xF9	; 249
 aee:	b9 2e       	mov	r11, r25
 af0:	8f 36       	cpi	r24, 0x6F	; 111
 af2:	c1 f0       	breq	.+48     	; 0xb24 <vfprintf+0x26c>
 af4:	18 f4       	brcc	.+6      	; 0xafc <vfprintf+0x244>
 af6:	88 35       	cpi	r24, 0x58	; 88
 af8:	79 f0       	breq	.+30     	; 0xb18 <vfprintf+0x260>
 afa:	b5 c0       	rjmp	.+362    	; 0xc66 <vfprintf+0x3ae>
 afc:	80 37       	cpi	r24, 0x70	; 112
 afe:	19 f0       	breq	.+6      	; 0xb06 <vfprintf+0x24e>
 b00:	88 37       	cpi	r24, 0x78	; 120
 b02:	21 f0       	breq	.+8      	; 0xb0c <vfprintf+0x254>
 b04:	b0 c0       	rjmp	.+352    	; 0xc66 <vfprintf+0x3ae>
 b06:	e9 2f       	mov	r30, r25
 b08:	e0 61       	ori	r30, 0x10	; 16
 b0a:	be 2e       	mov	r11, r30
 b0c:	b4 fe       	sbrs	r11, 4
 b0e:	0d c0       	rjmp	.+26     	; 0xb2a <vfprintf+0x272>
 b10:	fb 2d       	mov	r31, r11
 b12:	f4 60       	ori	r31, 0x04	; 4
 b14:	bf 2e       	mov	r11, r31
 b16:	09 c0       	rjmp	.+18     	; 0xb2a <vfprintf+0x272>
 b18:	34 fe       	sbrs	r3, 4
 b1a:	0a c0       	rjmp	.+20     	; 0xb30 <vfprintf+0x278>
 b1c:	29 2f       	mov	r18, r25
 b1e:	26 60       	ori	r18, 0x06	; 6
 b20:	b2 2e       	mov	r11, r18
 b22:	06 c0       	rjmp	.+12     	; 0xb30 <vfprintf+0x278>
 b24:	28 e0       	ldi	r18, 0x08	; 8
 b26:	30 e0       	ldi	r19, 0x00	; 0
 b28:	05 c0       	rjmp	.+10     	; 0xb34 <vfprintf+0x27c>
 b2a:	20 e1       	ldi	r18, 0x10	; 16
 b2c:	30 e0       	ldi	r19, 0x00	; 0
 b2e:	02 c0       	rjmp	.+4      	; 0xb34 <vfprintf+0x27c>
 b30:	20 e1       	ldi	r18, 0x10	; 16
 b32:	32 e0       	ldi	r19, 0x02	; 2
 b34:	f8 01       	movw	r30, r16
 b36:	b7 fe       	sbrs	r11, 7
 b38:	07 c0       	rjmp	.+14     	; 0xb48 <vfprintf+0x290>
 b3a:	60 81       	ld	r22, Z
 b3c:	71 81       	ldd	r23, Z+1	; 0x01
 b3e:	82 81       	ldd	r24, Z+2	; 0x02
 b40:	93 81       	ldd	r25, Z+3	; 0x03
 b42:	0c 5f       	subi	r16, 0xFC	; 252
 b44:	1f 4f       	sbci	r17, 0xFF	; 255
 b46:	06 c0       	rjmp	.+12     	; 0xb54 <vfprintf+0x29c>
 b48:	60 81       	ld	r22, Z
 b4a:	71 81       	ldd	r23, Z+1	; 0x01
 b4c:	80 e0       	ldi	r24, 0x00	; 0
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	0e 5f       	subi	r16, 0xFE	; 254
 b52:	1f 4f       	sbci	r17, 0xFF	; 255
 b54:	a3 01       	movw	r20, r6
 b56:	0e 94 8f 06 	call	0xd1e	; 0xd1e <__ultoa_invert>
 b5a:	88 2e       	mov	r8, r24
 b5c:	86 18       	sub	r8, r6
 b5e:	fb 2d       	mov	r31, r11
 b60:	ff 77       	andi	r31, 0x7F	; 127
 b62:	3f 2e       	mov	r3, r31
 b64:	36 fe       	sbrs	r3, 6
 b66:	0d c0       	rjmp	.+26     	; 0xb82 <vfprintf+0x2ca>
 b68:	23 2d       	mov	r18, r3
 b6a:	2e 7f       	andi	r18, 0xFE	; 254
 b6c:	a2 2e       	mov	r10, r18
 b6e:	89 14       	cp	r8, r9
 b70:	58 f4       	brcc	.+22     	; 0xb88 <vfprintf+0x2d0>
 b72:	34 fe       	sbrs	r3, 4
 b74:	0b c0       	rjmp	.+22     	; 0xb8c <vfprintf+0x2d4>
 b76:	32 fc       	sbrc	r3, 2
 b78:	09 c0       	rjmp	.+18     	; 0xb8c <vfprintf+0x2d4>
 b7a:	83 2d       	mov	r24, r3
 b7c:	8e 7e       	andi	r24, 0xEE	; 238
 b7e:	a8 2e       	mov	r10, r24
 b80:	05 c0       	rjmp	.+10     	; 0xb8c <vfprintf+0x2d4>
 b82:	b8 2c       	mov	r11, r8
 b84:	a3 2c       	mov	r10, r3
 b86:	03 c0       	rjmp	.+6      	; 0xb8e <vfprintf+0x2d6>
 b88:	b8 2c       	mov	r11, r8
 b8a:	01 c0       	rjmp	.+2      	; 0xb8e <vfprintf+0x2d6>
 b8c:	b9 2c       	mov	r11, r9
 b8e:	a4 fe       	sbrs	r10, 4
 b90:	0f c0       	rjmp	.+30     	; 0xbb0 <vfprintf+0x2f8>
 b92:	fe 01       	movw	r30, r28
 b94:	e8 0d       	add	r30, r8
 b96:	f1 1d       	adc	r31, r1
 b98:	80 81       	ld	r24, Z
 b9a:	80 33       	cpi	r24, 0x30	; 48
 b9c:	21 f4       	brne	.+8      	; 0xba6 <vfprintf+0x2ee>
 b9e:	9a 2d       	mov	r25, r10
 ba0:	99 7e       	andi	r25, 0xE9	; 233
 ba2:	a9 2e       	mov	r10, r25
 ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <vfprintf+0x300>
 ba6:	a2 fe       	sbrs	r10, 2
 ba8:	06 c0       	rjmp	.+12     	; 0xbb6 <vfprintf+0x2fe>
 baa:	b3 94       	inc	r11
 bac:	b3 94       	inc	r11
 bae:	04 c0       	rjmp	.+8      	; 0xbb8 <vfprintf+0x300>
 bb0:	8a 2d       	mov	r24, r10
 bb2:	86 78       	andi	r24, 0x86	; 134
 bb4:	09 f0       	breq	.+2      	; 0xbb8 <vfprintf+0x300>
 bb6:	b3 94       	inc	r11
 bb8:	a3 fc       	sbrc	r10, 3
 bba:	11 c0       	rjmp	.+34     	; 0xbde <vfprintf+0x326>
 bbc:	a0 fe       	sbrs	r10, 0
 bbe:	06 c0       	rjmp	.+12     	; 0xbcc <vfprintf+0x314>
 bc0:	b2 14       	cp	r11, r2
 bc2:	88 f4       	brcc	.+34     	; 0xbe6 <vfprintf+0x32e>
 bc4:	28 0c       	add	r2, r8
 bc6:	92 2c       	mov	r9, r2
 bc8:	9b 18       	sub	r9, r11
 bca:	0e c0       	rjmp	.+28     	; 0xbe8 <vfprintf+0x330>
 bcc:	b2 14       	cp	r11, r2
 bce:	60 f4       	brcc	.+24     	; 0xbe8 <vfprintf+0x330>
 bd0:	b6 01       	movw	r22, r12
 bd2:	80 e2       	ldi	r24, 0x20	; 32
 bd4:	90 e0       	ldi	r25, 0x00	; 0
 bd6:	0e 94 53 06 	call	0xca6	; 0xca6 <fputc>
 bda:	b3 94       	inc	r11
 bdc:	f7 cf       	rjmp	.-18     	; 0xbcc <vfprintf+0x314>
 bde:	b2 14       	cp	r11, r2
 be0:	18 f4       	brcc	.+6      	; 0xbe8 <vfprintf+0x330>
 be2:	2b 18       	sub	r2, r11
 be4:	02 c0       	rjmp	.+4      	; 0xbea <vfprintf+0x332>
 be6:	98 2c       	mov	r9, r8
 be8:	21 2c       	mov	r2, r1
 bea:	a4 fe       	sbrs	r10, 4
 bec:	10 c0       	rjmp	.+32     	; 0xc0e <vfprintf+0x356>
 bee:	b6 01       	movw	r22, r12
 bf0:	80 e3       	ldi	r24, 0x30	; 48
 bf2:	90 e0       	ldi	r25, 0x00	; 0
 bf4:	0e 94 53 06 	call	0xca6	; 0xca6 <fputc>
 bf8:	a2 fe       	sbrs	r10, 2
 bfa:	17 c0       	rjmp	.+46     	; 0xc2a <vfprintf+0x372>
 bfc:	a1 fc       	sbrc	r10, 1
 bfe:	03 c0       	rjmp	.+6      	; 0xc06 <vfprintf+0x34e>
 c00:	88 e7       	ldi	r24, 0x78	; 120
 c02:	90 e0       	ldi	r25, 0x00	; 0
 c04:	02 c0       	rjmp	.+4      	; 0xc0a <vfprintf+0x352>
 c06:	88 e5       	ldi	r24, 0x58	; 88
 c08:	90 e0       	ldi	r25, 0x00	; 0
 c0a:	b6 01       	movw	r22, r12
 c0c:	0c c0       	rjmp	.+24     	; 0xc26 <vfprintf+0x36e>
 c0e:	8a 2d       	mov	r24, r10
 c10:	86 78       	andi	r24, 0x86	; 134
 c12:	59 f0       	breq	.+22     	; 0xc2a <vfprintf+0x372>
 c14:	a1 fe       	sbrs	r10, 1
 c16:	02 c0       	rjmp	.+4      	; 0xc1c <vfprintf+0x364>
 c18:	8b e2       	ldi	r24, 0x2B	; 43
 c1a:	01 c0       	rjmp	.+2      	; 0xc1e <vfprintf+0x366>
 c1c:	80 e2       	ldi	r24, 0x20	; 32
 c1e:	a7 fc       	sbrc	r10, 7
 c20:	8d e2       	ldi	r24, 0x2D	; 45
 c22:	b6 01       	movw	r22, r12
 c24:	90 e0       	ldi	r25, 0x00	; 0
 c26:	0e 94 53 06 	call	0xca6	; 0xca6 <fputc>
 c2a:	89 14       	cp	r8, r9
 c2c:	38 f4       	brcc	.+14     	; 0xc3c <vfprintf+0x384>
 c2e:	b6 01       	movw	r22, r12
 c30:	80 e3       	ldi	r24, 0x30	; 48
 c32:	90 e0       	ldi	r25, 0x00	; 0
 c34:	0e 94 53 06 	call	0xca6	; 0xca6 <fputc>
 c38:	9a 94       	dec	r9
 c3a:	f7 cf       	rjmp	.-18     	; 0xc2a <vfprintf+0x372>
 c3c:	8a 94       	dec	r8
 c3e:	f3 01       	movw	r30, r6
 c40:	e8 0d       	add	r30, r8
 c42:	f1 1d       	adc	r31, r1
 c44:	80 81       	ld	r24, Z
 c46:	b6 01       	movw	r22, r12
 c48:	90 e0       	ldi	r25, 0x00	; 0
 c4a:	0e 94 53 06 	call	0xca6	; 0xca6 <fputc>
 c4e:	81 10       	cpse	r8, r1
 c50:	f5 cf       	rjmp	.-22     	; 0xc3c <vfprintf+0x384>
 c52:	22 20       	and	r2, r2
 c54:	09 f4       	brne	.+2      	; 0xc58 <vfprintf+0x3a0>
 c56:	42 ce       	rjmp	.-892    	; 0x8dc <vfprintf+0x24>
 c58:	b6 01       	movw	r22, r12
 c5a:	80 e2       	ldi	r24, 0x20	; 32
 c5c:	90 e0       	ldi	r25, 0x00	; 0
 c5e:	0e 94 53 06 	call	0xca6	; 0xca6 <fputc>
 c62:	2a 94       	dec	r2
 c64:	f6 cf       	rjmp	.-20     	; 0xc52 <vfprintf+0x39a>
 c66:	f6 01       	movw	r30, r12
 c68:	86 81       	ldd	r24, Z+6	; 0x06
 c6a:	97 81       	ldd	r25, Z+7	; 0x07
 c6c:	02 c0       	rjmp	.+4      	; 0xc72 <vfprintf+0x3ba>
 c6e:	8f ef       	ldi	r24, 0xFF	; 255
 c70:	9f ef       	ldi	r25, 0xFF	; 255
 c72:	2b 96       	adiw	r28, 0x0b	; 11
 c74:	e2 e1       	ldi	r30, 0x12	; 18
 c76:	0c 94 09 07 	jmp	0xe12	; 0xe12 <__epilogue_restores__>

00000c7a <strnlen_P>:
 c7a:	fc 01       	movw	r30, r24
 c7c:	05 90       	lpm	r0, Z+
 c7e:	61 50       	subi	r22, 0x01	; 1
 c80:	70 40       	sbci	r23, 0x00	; 0
 c82:	01 10       	cpse	r0, r1
 c84:	d8 f7       	brcc	.-10     	; 0xc7c <strnlen_P+0x2>
 c86:	80 95       	com	r24
 c88:	90 95       	com	r25
 c8a:	8e 0f       	add	r24, r30
 c8c:	9f 1f       	adc	r25, r31
 c8e:	08 95       	ret

00000c90 <strnlen>:
 c90:	fc 01       	movw	r30, r24
 c92:	61 50       	subi	r22, 0x01	; 1
 c94:	70 40       	sbci	r23, 0x00	; 0
 c96:	01 90       	ld	r0, Z+
 c98:	01 10       	cpse	r0, r1
 c9a:	d8 f7       	brcc	.-10     	; 0xc92 <strnlen+0x2>
 c9c:	80 95       	com	r24
 c9e:	90 95       	com	r25
 ca0:	8e 0f       	add	r24, r30
 ca2:	9f 1f       	adc	r25, r31
 ca4:	08 95       	ret

00000ca6 <fputc>:
 ca6:	0f 93       	push	r16
 ca8:	1f 93       	push	r17
 caa:	cf 93       	push	r28
 cac:	df 93       	push	r29
 cae:	fb 01       	movw	r30, r22
 cb0:	23 81       	ldd	r18, Z+3	; 0x03
 cb2:	21 fd       	sbrc	r18, 1
 cb4:	03 c0       	rjmp	.+6      	; 0xcbc <fputc+0x16>
 cb6:	8f ef       	ldi	r24, 0xFF	; 255
 cb8:	9f ef       	ldi	r25, 0xFF	; 255
 cba:	2c c0       	rjmp	.+88     	; 0xd14 <fputc+0x6e>
 cbc:	22 ff       	sbrs	r18, 2
 cbe:	16 c0       	rjmp	.+44     	; 0xcec <fputc+0x46>
 cc0:	46 81       	ldd	r20, Z+6	; 0x06
 cc2:	57 81       	ldd	r21, Z+7	; 0x07
 cc4:	24 81       	ldd	r18, Z+4	; 0x04
 cc6:	35 81       	ldd	r19, Z+5	; 0x05
 cc8:	42 17       	cp	r20, r18
 cca:	53 07       	cpc	r21, r19
 ccc:	44 f4       	brge	.+16     	; 0xcde <fputc+0x38>
 cce:	a0 81       	ld	r26, Z
 cd0:	b1 81       	ldd	r27, Z+1	; 0x01
 cd2:	9d 01       	movw	r18, r26
 cd4:	2f 5f       	subi	r18, 0xFF	; 255
 cd6:	3f 4f       	sbci	r19, 0xFF	; 255
 cd8:	31 83       	std	Z+1, r19	; 0x01
 cda:	20 83       	st	Z, r18
 cdc:	8c 93       	st	X, r24
 cde:	26 81       	ldd	r18, Z+6	; 0x06
 ce0:	37 81       	ldd	r19, Z+7	; 0x07
 ce2:	2f 5f       	subi	r18, 0xFF	; 255
 ce4:	3f 4f       	sbci	r19, 0xFF	; 255
 ce6:	37 83       	std	Z+7, r19	; 0x07
 ce8:	26 83       	std	Z+6, r18	; 0x06
 cea:	14 c0       	rjmp	.+40     	; 0xd14 <fputc+0x6e>
 cec:	8b 01       	movw	r16, r22
 cee:	ec 01       	movw	r28, r24
 cf0:	fb 01       	movw	r30, r22
 cf2:	00 84       	ldd	r0, Z+8	; 0x08
 cf4:	f1 85       	ldd	r31, Z+9	; 0x09
 cf6:	e0 2d       	mov	r30, r0
 cf8:	09 95       	icall
 cfa:	89 2b       	or	r24, r25
 cfc:	e1 f6       	brne	.-72     	; 0xcb6 <fputc+0x10>
 cfe:	d8 01       	movw	r26, r16
 d00:	16 96       	adiw	r26, 0x06	; 6
 d02:	8d 91       	ld	r24, X+
 d04:	9c 91       	ld	r25, X
 d06:	17 97       	sbiw	r26, 0x07	; 7
 d08:	01 96       	adiw	r24, 0x01	; 1
 d0a:	17 96       	adiw	r26, 0x07	; 7
 d0c:	9c 93       	st	X, r25
 d0e:	8e 93       	st	-X, r24
 d10:	16 97       	sbiw	r26, 0x06	; 6
 d12:	ce 01       	movw	r24, r28
 d14:	df 91       	pop	r29
 d16:	cf 91       	pop	r28
 d18:	1f 91       	pop	r17
 d1a:	0f 91       	pop	r16
 d1c:	08 95       	ret

00000d1e <__ultoa_invert>:
 d1e:	fa 01       	movw	r30, r20
 d20:	aa 27       	eor	r26, r26
 d22:	28 30       	cpi	r18, 0x08	; 8
 d24:	51 f1       	breq	.+84     	; 0xd7a <__ultoa_invert+0x5c>
 d26:	20 31       	cpi	r18, 0x10	; 16
 d28:	81 f1       	breq	.+96     	; 0xd8a <__ultoa_invert+0x6c>
 d2a:	e8 94       	clt
 d2c:	6f 93       	push	r22
 d2e:	6e 7f       	andi	r22, 0xFE	; 254
 d30:	6e 5f       	subi	r22, 0xFE	; 254
 d32:	7f 4f       	sbci	r23, 0xFF	; 255
 d34:	8f 4f       	sbci	r24, 0xFF	; 255
 d36:	9f 4f       	sbci	r25, 0xFF	; 255
 d38:	af 4f       	sbci	r26, 0xFF	; 255
 d3a:	b1 e0       	ldi	r27, 0x01	; 1
 d3c:	3e d0       	rcall	.+124    	; 0xdba <__ultoa_invert+0x9c>
 d3e:	b4 e0       	ldi	r27, 0x04	; 4
 d40:	3c d0       	rcall	.+120    	; 0xdba <__ultoa_invert+0x9c>
 d42:	67 0f       	add	r22, r23
 d44:	78 1f       	adc	r23, r24
 d46:	89 1f       	adc	r24, r25
 d48:	9a 1f       	adc	r25, r26
 d4a:	a1 1d       	adc	r26, r1
 d4c:	68 0f       	add	r22, r24
 d4e:	79 1f       	adc	r23, r25
 d50:	8a 1f       	adc	r24, r26
 d52:	91 1d       	adc	r25, r1
 d54:	a1 1d       	adc	r26, r1
 d56:	6a 0f       	add	r22, r26
 d58:	71 1d       	adc	r23, r1
 d5a:	81 1d       	adc	r24, r1
 d5c:	91 1d       	adc	r25, r1
 d5e:	a1 1d       	adc	r26, r1
 d60:	20 d0       	rcall	.+64     	; 0xda2 <__ultoa_invert+0x84>
 d62:	09 f4       	brne	.+2      	; 0xd66 <__ultoa_invert+0x48>
 d64:	68 94       	set
 d66:	3f 91       	pop	r19
 d68:	2a e0       	ldi	r18, 0x0A	; 10
 d6a:	26 9f       	mul	r18, r22
 d6c:	11 24       	eor	r1, r1
 d6e:	30 19       	sub	r19, r0
 d70:	30 5d       	subi	r19, 0xD0	; 208
 d72:	31 93       	st	Z+, r19
 d74:	de f6       	brtc	.-74     	; 0xd2c <__ultoa_invert+0xe>
 d76:	cf 01       	movw	r24, r30
 d78:	08 95       	ret
 d7a:	46 2f       	mov	r20, r22
 d7c:	47 70       	andi	r20, 0x07	; 7
 d7e:	40 5d       	subi	r20, 0xD0	; 208
 d80:	41 93       	st	Z+, r20
 d82:	b3 e0       	ldi	r27, 0x03	; 3
 d84:	0f d0       	rcall	.+30     	; 0xda4 <__ultoa_invert+0x86>
 d86:	c9 f7       	brne	.-14     	; 0xd7a <__ultoa_invert+0x5c>
 d88:	f6 cf       	rjmp	.-20     	; 0xd76 <__ultoa_invert+0x58>
 d8a:	46 2f       	mov	r20, r22
 d8c:	4f 70       	andi	r20, 0x0F	; 15
 d8e:	40 5d       	subi	r20, 0xD0	; 208
 d90:	4a 33       	cpi	r20, 0x3A	; 58
 d92:	18 f0       	brcs	.+6      	; 0xd9a <__ultoa_invert+0x7c>
 d94:	49 5d       	subi	r20, 0xD9	; 217
 d96:	31 fd       	sbrc	r19, 1
 d98:	40 52       	subi	r20, 0x20	; 32
 d9a:	41 93       	st	Z+, r20
 d9c:	02 d0       	rcall	.+4      	; 0xda2 <__ultoa_invert+0x84>
 d9e:	a9 f7       	brne	.-22     	; 0xd8a <__ultoa_invert+0x6c>
 da0:	ea cf       	rjmp	.-44     	; 0xd76 <__ultoa_invert+0x58>
 da2:	b4 e0       	ldi	r27, 0x04	; 4
 da4:	a6 95       	lsr	r26
 da6:	97 95       	ror	r25
 da8:	87 95       	ror	r24
 daa:	77 95       	ror	r23
 dac:	67 95       	ror	r22
 dae:	ba 95       	dec	r27
 db0:	c9 f7       	brne	.-14     	; 0xda4 <__ultoa_invert+0x86>
 db2:	00 97       	sbiw	r24, 0x00	; 0
 db4:	61 05       	cpc	r22, r1
 db6:	71 05       	cpc	r23, r1
 db8:	08 95       	ret
 dba:	9b 01       	movw	r18, r22
 dbc:	ac 01       	movw	r20, r24
 dbe:	0a 2e       	mov	r0, r26
 dc0:	06 94       	lsr	r0
 dc2:	57 95       	ror	r21
 dc4:	47 95       	ror	r20
 dc6:	37 95       	ror	r19
 dc8:	27 95       	ror	r18
 dca:	ba 95       	dec	r27
 dcc:	c9 f7       	brne	.-14     	; 0xdc0 <__ultoa_invert+0xa2>
 dce:	62 0f       	add	r22, r18
 dd0:	73 1f       	adc	r23, r19
 dd2:	84 1f       	adc	r24, r20
 dd4:	95 1f       	adc	r25, r21
 dd6:	a0 1d       	adc	r26, r0
 dd8:	08 95       	ret

00000dda <__prologue_saves__>:
 dda:	2f 92       	push	r2
 ddc:	3f 92       	push	r3
 dde:	4f 92       	push	r4
 de0:	5f 92       	push	r5
 de2:	6f 92       	push	r6
 de4:	7f 92       	push	r7
 de6:	8f 92       	push	r8
 de8:	9f 92       	push	r9
 dea:	af 92       	push	r10
 dec:	bf 92       	push	r11
 dee:	cf 92       	push	r12
 df0:	df 92       	push	r13
 df2:	ef 92       	push	r14
 df4:	ff 92       	push	r15
 df6:	0f 93       	push	r16
 df8:	1f 93       	push	r17
 dfa:	cf 93       	push	r28
 dfc:	df 93       	push	r29
 dfe:	cd b7       	in	r28, 0x3d	; 61
 e00:	de b7       	in	r29, 0x3e	; 62
 e02:	ca 1b       	sub	r28, r26
 e04:	db 0b       	sbc	r29, r27
 e06:	0f b6       	in	r0, 0x3f	; 63
 e08:	f8 94       	cli
 e0a:	de bf       	out	0x3e, r29	; 62
 e0c:	0f be       	out	0x3f, r0	; 63
 e0e:	cd bf       	out	0x3d, r28	; 61
 e10:	09 94       	ijmp

00000e12 <__epilogue_restores__>:
 e12:	2a 88       	ldd	r2, Y+18	; 0x12
 e14:	39 88       	ldd	r3, Y+17	; 0x11
 e16:	48 88       	ldd	r4, Y+16	; 0x10
 e18:	5f 84       	ldd	r5, Y+15	; 0x0f
 e1a:	6e 84       	ldd	r6, Y+14	; 0x0e
 e1c:	7d 84       	ldd	r7, Y+13	; 0x0d
 e1e:	8c 84       	ldd	r8, Y+12	; 0x0c
 e20:	9b 84       	ldd	r9, Y+11	; 0x0b
 e22:	aa 84       	ldd	r10, Y+10	; 0x0a
 e24:	b9 84       	ldd	r11, Y+9	; 0x09
 e26:	c8 84       	ldd	r12, Y+8	; 0x08
 e28:	df 80       	ldd	r13, Y+7	; 0x07
 e2a:	ee 80       	ldd	r14, Y+6	; 0x06
 e2c:	fd 80       	ldd	r15, Y+5	; 0x05
 e2e:	0c 81       	ldd	r16, Y+4	; 0x04
 e30:	1b 81       	ldd	r17, Y+3	; 0x03
 e32:	aa 81       	ldd	r26, Y+2	; 0x02
 e34:	b9 81       	ldd	r27, Y+1	; 0x01
 e36:	ce 0f       	add	r28, r30
 e38:	d1 1d       	adc	r29, r1
 e3a:	0f b6       	in	r0, 0x3f	; 63
 e3c:	f8 94       	cli
 e3e:	de bf       	out	0x3e, r29	; 62
 e40:	0f be       	out	0x3f, r0	; 63
 e42:	cd bf       	out	0x3d, r28	; 61
 e44:	ed 01       	movw	r28, r26
 e46:	08 95       	ret

00000e48 <_exit>:
 e48:	f8 94       	cli

00000e4a <__stop_program>:
 e4a:	ff cf       	rjmp	.-2      	; 0xe4a <__stop_program>
